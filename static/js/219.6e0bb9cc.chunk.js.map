{"version":3,"file":"static/js/219.6e0bb9cc.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/CameraAlt.js","../node_modules/6pp/dist/index.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"3.2\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5\"\n}, \"1\")], 'CameraAlt');","import * as React from 'react';\nimport { useState, useEffect, useRef, useCallback, memo } from 'react';\n\nconst cache = new Map();\n\n// Custom hook for fetching data from API while handling loading and error states and caching the response\nconst useFetchData = (url, key, dependencyProps = []) => {\n    const [data, setData] = useState();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [refetchIndex, setRefetchIndex] = useState(0);\n    useEffect(() => {\n        const controller = new AbortController();\n        if (cache.has(key)) {\n            setData(JSON.parse(cache.get(key)));\n            return;\n        }\n        setLoading(true);\n        fetch(url, { credentials: \"include\", signal: controller.signal })\n            .then(async (res) => {\n            const data = await res.json();\n            if (!res.ok) {\n                throw new Error(data.message || \"Errro while fetching!\");\n            }\n            else {\n                setData(data);\n                cache.set(key, JSON.stringify(data));\n            }\n        })\n            .catch((error) => {\n            if (error.name !== \"AbortError\") {\n                setError(error.message || \"Something went wrong!\");\n            }\n        })\n            .finally(() => setLoading(false));\n        return () => {\n            controller.abort();\n        };\n    }, [refetchIndex, ...dependencyProps]);\n    const refetch = () => {\n        cache.delete(key);\n        setRefetchIndex((prevIndex) => prevIndex + 1);\n    };\n    const clearCache = () => {\n        cache.delete(key);\n    };\n    return { data, loading, error, refetch, clearCache };\n};\n\nconst errorMessages = {\n    length: \"at least 8 characters\",\n    number: \"a number\",\n    specialChar: \"a special\",\n    capitalLetter: \"a capital\",\n    lowercaseLetter: \"a lowercase\",\n};\n\nconst isIncludeNumber = (password) => {\n    const regex = /\\d/; // This regular expression matches any digit (0-9)\n    return regex.test(password); // This will return true if the password includes a number, and false otherwise\n};\nconst isIncludeSpecialChar = (password) => {\n    const specialCharRegex = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/; // This regular expression matches any special character\n    return specialCharRegex.test(password); // This will return true if the password includes a special character, and false otherwise\n};\nconst isIncludeCapitalLetter = (password) => {\n    const capitalLetterRegex = /[A-Z]/; // This regular expression matches any capital letter (A-Z)\n    return capitalLetterRegex.test(password); // This will return true if the password includes a capital letter, and false otherwise\n};\nconst isIncludeLowercaseLetter = (password) => {\n    const lowercaseLetterRegex = /[a-z]/; // This regular expression matches any lowercase letter (a-z)\n    return lowercaseLetterRegex.test(password); // This will return true if the password includes a lowercase letter, and false otherwise\n};\nconst isValidEmail = (email) => {\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\n    return emailRegex.test(email);\n};\nconst isValidUsername = (username) => {\n    const usernameRegex = /^[a-zA-Z0-9]+$/;\n    return usernameRegex.test(username);\n};\nconst isValidUrl = (url) => {\n    try {\n        new URL(url);\n        return true;\n    }\n    catch (_) {\n        return false;\n    }\n};\n// 10 digit phone number\nconst isValidPhoneNumber = (phoneNumber) => {\n    const regex = /^\\d{10}$/;\n    return regex.test(phoneNumber);\n};\n// YYYY-MM-DD Format\nconst isValidDate = (date) => {\n    const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\n    return regex.test(date);\n};\n// HH:MM Format\nconst isValidTime = (time) => {\n    const regex = /^\\d{2}:\\d{2}$/;\n    return regex.test(time);\n};\n// YYYY-MM-DDTHH:MM Format\nconst isValidDateTime = (dateTime) => {\n    const regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/;\n    return regex.test(dateTime);\n};\nconst isDateBetween = (date, startDate, endDate) => {\n    const targetDate = new Date(date);\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    return start <= targetDate && targetDate <= end;\n};\n\nconst useFileHandler = (type, limitInMb = 5, maxFiles = 10) => {\n    const initialFile = (type === \"multiple\" ? [] : null);\n    const initialPreview = (type === \"multiple\" ? [] : null);\n    const [error, setError] = useState(null);\n    const [file, setFile] = useState(initialFile);\n    const [preview, setPreview] = useState(initialPreview);\n    const changeHandler = (e) => {\n        if (!e.target.files)\n            return;\n        if (type === \"single\") {\n            const singleFile = e.target.files[0];\n            if (e.target.files.length > 1) {\n                return setError(\"Cannot upload more than 1 file, please select type as 'Multiple'\");\n            }\n            if (singleFile.size > 1024 * 1024 * limitInMb) {\n                return setError(\"File size too large\");\n            }\n            const reader = new FileReader();\n            reader.readAsDataURL(singleFile);\n            reader.onloadend = () => {\n                setPreview(reader.result);\n            };\n            setFile(singleFile);\n        }\n        if (type === \"multiple\") {\n            const files = Array.from(e.target.files);\n            if (maxFiles && files.length > maxFiles) {\n                return setError(`Maximum ${maxFiles} files allowed`);\n            }\n            for (const item of files) {\n                if (item.size > 1024 * 1024 * limitInMb) {\n                    setError(\"File size too large\");\n                    return;\n                }\n                const reader = new FileReader();\n                reader.readAsDataURL(item);\n                reader.onloadend = () => {\n                    setPreview((prev) => {\n                        if (Array.isArray(prev)) {\n                            return [...prev, reader.result];\n                        }\n                        else\n                            return [reader.result];\n                    });\n                };\n                setFile((prev) => {\n                    if (Array.isArray(prev)) {\n                        return [...prev, item];\n                    }\n                    else\n                        return [item];\n                });\n            }\n        }\n    };\n    const clear = () => {\n        setFile(initialFile);\n        setPreview(initialPreview);\n        setError(null);\n    };\n    return {\n        file,\n        preview,\n        error,\n        changeHandler,\n        clear,\n    };\n};\nconst useStrongPassword = () => {\n    const [error, setError] = useState(\"\");\n    const [value, setValue] = useState(\"\");\n    const changeHandler = (e) => {\n        const val = e.target.value;\n        setValue(val);\n        const errors = [];\n        if (val.length < 8)\n            errors.push(errorMessages.length);\n        if (!isIncludeNumber(val))\n            errors.push(errorMessages.number);\n        if (!isIncludeSpecialChar(val))\n            errors.push(errorMessages.specialChar);\n        if (!isIncludeCapitalLetter(val))\n            errors.push(errorMessages.capitalLetter);\n        if (!isIncludeLowercaseLetter(val))\n            errors.push(errorMessages.lowercaseLetter);\n        setError(errors.length > 0\n            ? `Password must include ${errors.join(\", \")} character`\n            : \"\");\n    };\n    const clear = () => {\n        setValue(\"\");\n        setError(\"\");\n    };\n    return {\n        error,\n        value,\n        changeHandler,\n        clear,\n    };\n};\nconst useInputValidation = (initialVal, validator = () => undefined) => {\n    const [value, setValue] = useState(initialVal);\n    const [error, setError] = useState(\"\");\n    const changeHandler = (e) => {\n        let newValue;\n        if (typeof value === \"number\") {\n            newValue = Number(e.target.value);\n        }\n        else {\n            newValue = e.target.value;\n        }\n        setValue(newValue);\n        const validationResult = validator(newValue);\n        if (validationResult) {\n            setError(validationResult.errorMessage);\n        }\n        else {\n            setError(\"\");\n        }\n    };\n    const clear = () => {\n        setValue(initialVal);\n        setError(\"\");\n    };\n    return {\n        value,\n        changeHandler,\n        error,\n        clear,\n    };\n};\n\nconst useConfirmModal = ({ title = \"Confirm Delete\", subtitle = \"Are you sure you want to delete?\", confirmHandler, }) => {\n    const modalRef = useRef(null);\n    const [isOpen, setIsOpen] = useState(false);\n    const showModal = () => setIsOpen(true);\n    const closeModal = () => setIsOpen(false);\n    const closeHandler = (e) => {\n        if (!modalRef.current)\n            return;\n        const dialogDimension = modalRef.current?.getBoundingClientRect();\n        if (e.clientX < dialogDimension.left ||\n            e.clientX > dialogDimension.right ||\n            e.clientY < dialogDimension.top ||\n            e.clientY > dialogDimension.bottom)\n            closeModal();\n    };\n    const handler = () => {\n        closeModal();\n        confirmHandler();\n    };\n    const ConfirmModal = ({ containerStyles = {}, noBtnStyles = {}, yesBtnStyles = {}, subtitleStyles = {}, titleStyles = {}, containerClassName, }) => (React.createElement(\"section\", { onKeyDown: (e) => e.preventDefault(), onClick: closeHandler, style: {\n            display: isOpen ? \"block\" : \"none\",\n            height: \"100vh\",\n            width: \"100%\",\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n        } },\n        React.createElement(\"article\", { style: {\n                height: \"100%\",\n                width: \"100%\",\n                backgroundColor: \"rgba(0,0,0,0.8)\",\n                backdropFilter: \"blur(2px)\",\n            } }),\n        React.createElement(\"div\", { className: `_6pp-confirm-modal ${containerClassName}`, style: {\n                width: \"20rem\",\n                backgroundColor: \"white\",\n                padding: \"1rem\",\n                borderRadius: \"0.25rem\",\n                border: \"none\",\n                position: \"fixed\",\n                top: \"50%\",\n                left: \"50%\",\n                zIndex: 20,\n                transform: \"translate(-50%,-50%)\",\n                ...containerStyles,\n            }, ref: modalRef },\n            React.createElement(\"h5\", { style: {\n                    fontFamily: \"sans-serif\",\n                    textTransform: \"uppercase\",\n                    ...titleStyles,\n                } }, title),\n            React.createElement(\"p\", { style: { fontFamily: \"monospace\", margin: \"1rem\", ...subtitleStyles } }, subtitle),\n            React.createElement(\"div\", { style: {\n                    display: \"flex\",\n                    gap: \"1rem\",\n                    marginTop: \"1rem 0\",\n                    float: \"right\",\n                } },\n                React.createElement(\"button\", { style: {\n                        border: \"none\",\n                        outline: \"none\",\n                        cursor: \"pointer\",\n                        padding: \"0.5rem 1rem\",\n                        borderRadius: \"5px\",\n                        backgroundColor: \"inherit\",\n                        color: \"rgba(0,0,0,0.9)\",\n                        transition: \"all 0.3s\",\n                        ...noBtnStyles,\n                    }, autoFocus: true, onClick: closeModal }, \"No\"),\n                React.createElement(\"button\", { style: {\n                        border: \"none\",\n                        outline: \"none\",\n                        cursor: \"pointer\",\n                        borderRadius: \"5px\",\n                        padding: \"0.5rem 1rem\",\n                        backgroundColor: \"rgba(0,0,0,0.9)\",\n                        color: \"white\",\n                        transition: \"all 0.3s\",\n                        ...yesBtnStyles,\n                    }, onClick: handler }, \"Yes\")))));\n    return { ConfirmModal, showModal, close };\n};\n\nconst useRating = ({ IconFilled, IconOutline, maxRating = 5, value = 0, selectable = false, styles = {}, }) => {\n    if (maxRating < 1)\n        throw new Error(\"maxRating should be greater than 0\");\n    if (value > maxRating)\n        throw new Error(\"value should be less than Max Rating\");\n    const [rating, setRating] = useState(value);\n    const handleClick = (newRating) => {\n        if (!selectable)\n            return;\n        setRating(newRating);\n    };\n    useEffect(() => {\n        setRating(value);\n    }, [value]);\n    const Ratings = () => (React.createElement(\"div\", { style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            ...styles,\n        } }, Array.from({ length: maxRating }).map((_, i) => (React.createElement(\"span\", { style: {\n            cursor: selectable ? \"pointer\" : \"unset\",\n        }, key: i, onClick: () => handleClick(i + 1) },\n        i < rating && React.createElement(\"span\", null, IconFilled),\n        i >= rating && React.createElement(\"span\", null, IconOutline))))));\n    return { Ratings, rating, setRating };\n};\n\nconst useInfiniteScrollBottom = (urlWithEndpoint, pageQueryKeyword, limitQueryKeyword, limit, listClassName, totalPages = 1) => {\n    const [data, setData] = useState([]);\n    const [page, setPage] = useState(1);\n    const [hasMore, setHasMore] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState();\n    const timeoutId = useRef(null);\n    const fetchData = useCallback(async () => {\n        try {\n            setLoading(true);\n            const response = await fetch(`${urlWithEndpoint}?${pageQueryKeyword}=${page}&${limitQueryKeyword}=${limit}`, { credentials: \"include\" });\n            if (!response.ok)\n                throw new Error(\"Something went wrong\");\n            const newData = await response.json();\n            setData((oldData) => [...oldData, ...newData]);\n            setHasMore(newData.length > 0);\n        }\n        catch (error) {\n            setError(error || \"Something went wrong\");\n        }\n        finally {\n            setLoading(false);\n        }\n    }, [page, limit, urlWithEndpoint, pageQueryKeyword, limitQueryKeyword]);\n    useEffect(() => {\n        fetchData();\n    }, [fetchData]);\n    useEffect(() => {\n        const loadMore = () => {\n            if (timeoutId.current) {\n                clearTimeout(timeoutId.current);\n            }\n            timeoutId.current = setTimeout(() => {\n                if (totalPages === page)\n                    return;\n                setPage((oldPage) => oldPage + 1);\n            }, 200);\n        };\n        const observerDown = new IntersectionObserver((entries) => {\n            if (entries[0].isIntersecting && hasMore && !loading) {\n                loadMore();\n            }\n        }, {\n            rootMargin: \"100px\",\n        });\n        // Observe the last list item\n        const lastListItem = document.querySelector(`.${listClassName}:last-of-type`);\n        if (lastListItem) {\n            observerDown.observe(lastListItem);\n        }\n        return () => {\n            observerDown.disconnect();\n            if (timeoutId.current)\n                clearTimeout(timeoutId.current);\n        };\n    }, [totalPages, page, hasMore, loading]);\n    return {\n        loading,\n        hasMore,\n        page,\n        error,\n        data,\n        setData,\n    };\n};\nconst useInfiniteScrollTop = (containerRef, totalPages, page, setPage, newData, shouldReverse = false) => {\n    const [data, setData] = useState([]);\n    const debounceTimer = useRef(null);\n    const handleScroll = useCallback(() => {\n        if (debounceTimer.current) {\n            clearTimeout(debounceTimer.current);\n        }\n        debounceTimer.current = setTimeout(() => {\n            if (!containerRef.current)\n                return;\n            const { scrollTop } = containerRef.current;\n            const scrolledToTop = scrollTop === 0;\n            if (scrolledToTop) {\n                if (totalPages === page)\n                    return;\n                setPage((oldPage) => oldPage + 1);\n            }\n        }, 200);\n    }, [totalPages, page]);\n    useEffect(() => {\n        const container = containerRef.current;\n        if (container)\n            container.addEventListener(\"scroll\", handleScroll);\n        return () => {\n            if (container)\n                container.removeEventListener(\"scroll\", handleScroll);\n        };\n    }, [handleScroll, data]);\n    useEffect(() => {\n        let prevScrollHeight = 0;\n        let prevScrollTop = 0;\n        if (containerRef.current) {\n            prevScrollHeight = containerRef.current.scrollHeight;\n            prevScrollTop = containerRef.current.scrollTop;\n        }\n        if (newData) {\n            setData((oldData) => {\n                const seen = new Set(oldData.map((i) => i._id));\n                const newMessages = newData?.filter((i) => !seen.has(i._id));\n                if (shouldReverse) {\n                    const newDataArray = Array.isArray(newMessages)\n                        ? [...newMessages]\n                        : [newMessages];\n                    return [...newDataArray.reverse(), ...oldData];\n                }\n                else {\n                    return [...newMessages, ...oldData];\n                }\n            });\n        }\n        requestAnimationFrame(() => {\n            if (containerRef.current) {\n                const newScrollTop = prevScrollTop + containerRef.current.scrollHeight - prevScrollHeight;\n                containerRef.current.scrollTop = newScrollTop;\n            }\n        });\n    }, [newData]);\n    return { data, setData };\n};\n\nconst Pagination = ({ totalPages = 1, currPage, setCurrPage, activeButtonStyle = {\n    backgroundColor: \"black\",\n    color: \"white\",\n}, Button = ({ children, onClick, style }) => (React.createElement(\"button\", { style: {\n        padding: \"0.5rem 1rem\",\n        outline: \"none\",\n        border: \"none\",\n        borderRadius: \"0.5rem\",\n        cursor: \"pointer\",\n        backgroundColor: \"#e2e8f0\",\n        ...style,\n    }, onClick: onClick }, children)), Container = ({ children }) => (React.createElement(\"ul\", { style: {\n        display: \"flex\",\n        gap: \"1rem\",\n        listStyle: \"none\",\n    } }, children)), }) => {\n    const [startPage, setStartPage] = useState(1);\n    const maxPageButtons = 4;\n    const changePage = (page) => {\n        setCurrPage(page);\n        if (page > startPage + maxPageButtons - 1) {\n            setStartPage(page);\n        }\n        else if (page < startPage) {\n            setStartPage(page - maxPageButtons + 1);\n        }\n    };\n    return (React.createElement(Container, null,\n        React.createElement(React.Fragment, null,\n            startPage > 1 && (React.createElement(\"li\", null,\n                React.createElement(Button, { onClick: () => setStartPage((prev) => prev - maxPageButtons) }, \"Prev\"))),\n            Array.from({ length: Math.min(maxPageButtons, totalPages) }, (_, idx) => startPage + idx).map((page) => {\n                return (React.createElement(\"li\", { key: page },\n                    React.createElement(Button, { style: currPage === page ? activeButtonStyle : {}, onClick: () => changePage(page) }, page)));\n            }),\n            totalPages > startPage + maxPageButtons - 1 && (React.createElement(\"li\", null,\n                React.createElement(Button, { onClick: () => setStartPage((prev) => prev + maxPageButtons) }, \"Next\"))))));\n};\n\nconst PageStepper = ({ totalPages = 1, currPage, setCurrPage, Typography = ({ children }) => React.createElement(\"code\", null, children), Button, Container = ({ children }) => (React.createElement(\"nav\", { style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"1rem\",\n        padding: \"1rem 0\",\n    } }, children)), }) => {\n    const isPreviousDisabled = currPage === 1;\n    const isNextDisabled = currPage === totalPages;\n    const handlePreviousClick = () => {\n        if (currPage === 1)\n            return;\n        setCurrPage((prev) => prev - 1);\n    };\n    const handleNextClick = () => {\n        if (currPage === totalPages)\n            return;\n        setCurrPage((prev) => prev + 1);\n    };\n    return (React.createElement(Container, null,\n        React.createElement(React.Fragment, null,\n            React.createElement(Button, { disabled: isPreviousDisabled, onClick: handlePreviousClick }, \"Previous\"),\n            React.createElement(Typography, null,\n                currPage,\n                \" of \",\n                totalPages),\n            React.createElement(Button, { disabled: isNextDisabled, onClick: handleNextClick }, \"Next\"))));\n};\n\nconst MyntraCarousel = ({ images, darkMode = false, objectFit = \"cover\", setIsOpen, PrevButton, NextButton, }) => {\n    const [activeImage, setActiveImage] = useState(0);\n    const containerRef = useRef(null);\n    const imageRef = useRef(null);\n    const border = darkMode ? \"1px solid #fff\" : \"1px solid black\";\n    const incrementHandler = () => {\n        if (activeImage === images.length - 1)\n            setActiveImage(0);\n        else\n            setActiveImage((prev) => prev + 1);\n    };\n    const decrementHandler = () => {\n        if (activeImage === 0)\n            setActiveImage(images.length - 1);\n        else\n            setActiveImage((prev) => prev - 1);\n    };\n    const mouseMoveHandler = useCallback((e) => {\n        const y = e.clientY;\n        containerRef.current?.scrollTo({ top: y });\n    }, []);\n    const closeHandler = (e) => {\n        if (!containerRef.current)\n            return;\n        const containerDimension = containerRef.current.getBoundingClientRect();\n        if (e.clientX < containerDimension.left ||\n            e.clientX > containerDimension.right ||\n            e.clientY < containerDimension.top ||\n            e.clientY > containerDimension.bottom)\n            setIsOpen(false);\n    };\n    useEffect(() => {\n        if (containerRef.current)\n            containerRef.current.addEventListener(\"mousemove\", mouseMoveHandler);\n        return () => {\n            if (containerRef.current)\n                containerRef.current.removeEventListener(\"mousemove\", mouseMoveHandler);\n        };\n    }, []);\n    const ImagesList = (React.createElement(\"aside\", { style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"1rem\",\n            position: \"absolute\",\n            top: \"1rem\",\n            left: \"1rem\",\n        } }, images.map((i, idx) => (React.createElement(\"button\", { key: idx, style: {\n            border: idx === activeImage ? border : \"1px solid rgba(0,0,0,0.3)\",\n            outline: \"none\",\n            backgroundColor: \"transparent\",\n            width: \"fit-content\",\n            height: \"unset\",\n            cursor: \"pointer\",\n        }, onClick: () => setActiveImage(idx) },\n        React.createElement(\"img\", { style: {\n                width: \"2rem\",\n                height: \"2.5rem\",\n                objectFit: \"contain\",\n            }, src: i, alt: \"Image\" }))))));\n    const NavigationButton = (React.createElement(\"article\", { style: {\n            display: \"flex\",\n            width: \"95%\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%,-50%)\",\n        } },\n        React.createElement(PrevButton, { onClick: decrementHandler }),\n        React.createElement(NextButton, { onClick: incrementHandler })));\n    return (React.createElement(\"section\", { style: {\n            width: \"100vw\",\n            height: \"100vh\",\n            backgroundColor: \"rgba(0,0,0,0.7)\",\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            zIndex: 200,\n        }, onClick: closeHandler },\n        React.createElement(\"div\", { style: {\n                width: \"100%\",\n                maxWidth: \"950px\",\n                height: \"100vh\",\n                position: \"relative\",\n                margin: \"auto\",\n                boxShadow: darkMode ? \"0 0 5px black\" : \"0 0 5px white\",\n                overflow: \"auto\",\n                cursor: \"s-resize\",\n                scrollbarWidth: \"none\",\n                backgroundColor: darkMode ? \"black\" : \"#fff\",\n            }, ref: containerRef },\n            React.createElement(\"img\", { ref: imageRef, src: images[activeImage], style: {\n                    width: \"100%\",\n                    minHeight: \"100vh\",\n                    objectFit,\n                } }),\n            React.createElement(\"div\", { style: {\n                    position: \"fixed\",\n                    top: 0,\n                    width: \"95%\",\n                    maxWidth: \"950px\",\n                    height: \"100vh\",\n                } },\n                ImagesList,\n                NavigationButton))));\n};\nconst StylishCarousel = ({ imageSize = [\"100%\", \"80vw\", \"25rem\", \"30rem\"], images = [], objectFit = \"cover\", imageBg = \"transparent\", sideImageSize = [\"3rem\", \"3.5rem\", \"4rem\", \"5rem\"], }) => {\n    if (images.length === 0)\n        throw new Error(\"imageSize should not be more than 4\");\n    if (imageSize.length > 5)\n        throw new Error(\"imageSize should not be more than 4\");\n    const [activeImage, setActiveImage] = useState(0);\n    const [currentWidth, setCurrentWidth] = useState(\"\");\n    const [sideImageWidth, setSideImageWidth] = useState(\"\");\n    const resizeHandler = useCallback(() => {\n        const width = window.screen.width;\n        if (width < 480) {\n            setCurrentWidth(imageSize[0]);\n            setSideImageWidth(sideImageSize[0]);\n        }\n        else if (width < 768 && imageSize.length >= 3) {\n            setCurrentWidth(imageSize[1]);\n            setSideImageWidth(sideImageSize[1]);\n        }\n        else if (width < 992 && imageSize.length >= 4) {\n            setCurrentWidth(imageSize[2]);\n            setSideImageWidth(sideImageSize[2]);\n        }\n        else if (width < 1280 && imageSize.length >= 5) {\n            setCurrentWidth(imageSize[3]);\n            setSideImageWidth(sideImageSize[3]);\n        }\n        else {\n            setCurrentWidth(imageSize[imageSize.length - 1]);\n            setSideImageWidth(sideImageSize[sideImageSize.length - 1]);\n        }\n    }, []);\n    useEffect(() => {\n        resizeHandler();\n        window.addEventListener(\"resize\", resizeHandler);\n        return () => {\n            window.removeEventListener(\"resize\", resizeHandler);\n        };\n    }, []);\n    return (React.createElement(\"div\", { style: {\n            width: \"fit-content\",\n            display: \"flex\",\n            gap: \"1rem\",\n            padding: \"1rem\",\n        } },\n        React.createElement(\"aside\", { style: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: \"fit-content\",\n                gap: \"1rem\",\n            } }, images.map((i, index) => (React.createElement(\"img\", { key: index, style: {\n                width: sideImageWidth,\n                height: sideImageWidth,\n                borderRadius: \"0.25rem\",\n                objectFit,\n                border: \"1px solid  rgba(0,0,0,0.3)\",\n            }, src: i, alt: `Image-${index}`, onMouseOver: () => setActiveImage(index) })))),\n        React.createElement(\"section\", { style: {\n                width: currentWidth,\n                height: currentWidth,\n                overflow: \"hidden\",\n                scrollbarWidth: \"none\",\n                display: \"flex\",\n                alignItems: \"center\",\n                borderRadius: \"0.5rem\",\n                backgroundColor: imageBg,\n            } }, images.map((i, index) => (React.createElement(\"img\", { key: index, style: {\n                width: currentWidth,\n                height: currentWidth,\n                objectFit: \"contain\",\n                aspectRatio: \"1/1\",\n                borderRadius: \"0.5rem\",\n                transition: \"all 0.3s\",\n                transform: `translateX(-${activeImage * 100}%)`,\n            }, src: i, alt: `Photo-${index}` }))))));\n};\nconst Slider = ({ images, objectFit = \"cover\", PrevIcon, NextIcon, bgColor = \"inherit\", showNav = true, showDots, showThumbnails, autoplay, autoplayDuration = 4000, onClick, }) => {\n    const [activeImage, setActiveImage] = useState(0);\n    const incrementHandler = () => {\n        setActiveImage((prev) => {\n            if (prev === images.length - 1)\n                return 0;\n            return prev + 1;\n        });\n    };\n    const decrementHandler = () => {\n        setActiveImage((prev) => {\n            if (prev === 0)\n                return images.length - 1;\n            return prev - 1;\n        });\n    };\n    useEffect(() => {\n        let intervalId;\n        if (autoplay) {\n            intervalId = setInterval(() => {\n                incrementHandler();\n            }, autoplayDuration);\n        }\n        return () => {\n            if (intervalId)\n                clearInterval(intervalId);\n        };\n    }, []);\n    const NavigationButton = (React.createElement(\"article\", { style: {\n            padding: \"1rem\",\n            position: \"absolute\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            width: \"100%\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n        } },\n        React.createElement(\"button\", { style: {\n                border: \"none\",\n                backgroundColor: \"transparent\",\n                cursor: \"pointer\",\n                outline: \"none\",\n            }, onClick: decrementHandler }, PrevIcon || \"Prev\"),\n        React.createElement(\"button\", { style: {\n                border: \"none\",\n                backgroundColor: \"transparent\",\n                cursor: \"pointer\",\n                outline: \"none\",\n            }, onClick: incrementHandler }, NextIcon || \"Next\")));\n    const Dots = (React.createElement(\"article\", { style: {\n            padding: \"1rem\",\n            position: \"absolute\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            width: \"100%\",\n            bottom: 0,\n            gap: \"0.5rem\",\n        } }, images.map((_, idx) => (React.createElement(\"button\", { key: idx, style: {\n            width: \"0.75rem\",\n            height: \"0.75rem\",\n            borderRadius: \"50%\",\n            border: \"none\",\n            backgroundColor: idx === activeImage ? \"white\" : \"black\",\n        }, onClick: () => setActiveImage(idx) })))));\n    const Thumbnails = (React.createElement(\"aside\", { style: {\n            height: \"5rem\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            gap: \"1rem\",\n            flexWrap: \"wrap\",\n        } }, images.map((i, index) => (React.createElement(\"img\", { key: index, style: {\n            width: \"5rem\",\n            height: \"5rem\",\n            borderRadius: \"0.25rem\",\n            objectFit: \"cover\",\n            border: \"1px solid  rgba(0,0,0,0.3)\",\n        }, src: i, alt: `Image-${index}`, onMouseOver: () => setActiveImage(index) })))));\n    return (React.createElement(\"div\", { style: {\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"1rem\",\n            backgroundColor: bgColor,\n        } },\n        React.createElement(\"div\", { style: {\n                height: \"100%\",\n                display: \"flex\",\n                overflowX: \"hidden\",\n                position: \"relative\",\n            } },\n            images.map((i, index) => (React.createElement(\"img\", { key: index, style: {\n                    width: \"100%\",\n                    height: \"100%\",\n                    objectFit,\n                    flex: \"none\",\n                    transition: \"all 0.3s\",\n                    transform: `translateX(-${activeImage * 100}%)`,\n                }, src: i, onClick: () => onClick && onClick() }))),\n            showNav && NavigationButton,\n            showDots && Dots),\n        showThumbnails && Thumbnails));\n};\n\nconst FireBolt = memo(({ size = 10, color = \"black\", styles, zoom = \"2\", mode = \"normal\", }) => {\n    if (size < 1 || size > 40) {\n        throw new Error(\"Size must be between 1 and 40\");\n    }\n    const circles = useRef();\n    const coordinates = useRef({ x: 0, y: 0 });\n    const fireBoltZoomRef = useRef(false);\n    const handleMouseMove = (e) => {\n        coordinates.current = {\n            x: e.clientX,\n            y: e.clientY,\n        };\n        const target = e.target;\n        const fireboltZoom = target.getAttribute(\"data-firebolt-zoom\");\n        fireBoltZoomRef.current = Boolean(fireboltZoom);\n    };\n    const animateCircles = useCallback(() => {\n        let x = coordinates.current.x;\n        let y = coordinates.current.y;\n        const cursors = circles.current;\n        if (!cursors) {\n            return;\n        }\n        Array.from(cursors).forEach((circle, idx) => {\n            circle.style.left = `${x - 12}px`;\n            circle.style.top = `${y - 12}px`;\n            circle.x = x;\n            circle.y = y;\n            const newSize = (cursors.length - idx) / cursors.length;\n            circle.style.scale = newSize.toString();\n            const nextCircle = cursors[idx + 1] || cursors[0];\n            x += (Number(nextCircle.x || 0) - x) * 0.3;\n            y += (Number(nextCircle.y || 0) - y) * 0.3;\n            if (idx === 0 && fireBoltZoomRef.current) {\n                circle.style.scale = zoom;\n            }\n        });\n        requestAnimationFrame(animateCircles);\n    }, []);\n    useEffect(() => {\n        circles.current = document.getElementsByClassName(\"6pp-firebolt-Cursor\");\n        animateCircles();\n        window.addEventListener(\"mousemove\", handleMouseMove);\n        return () => {\n            window.removeEventListener(\"mousemove\", handleMouseMove);\n        };\n    }, []);\n    return (React.createElement(\"div\", { style: {\n            zIndex: \"10000\",\n            mixBlendMode: mode,\n            pointerEvents: \"none\",\n        } }, Array.from({ length: size }).map((_, i) => (React.createElement(\"div\", { className: \"6pp-firebolt-Cursor\", key: i, style: {\n            position: \"fixed\",\n            height: \"24px\",\n            width: \"24px\",\n            borderRadius: \"50%\",\n            left: 0,\n            top: 0,\n            backgroundColor: color,\n            userSelect: \"none\",\n            pointerEvents: \"none\",\n            transition: \"scale 0.2s\",\n            ...styles,\n        } })))));\n});\n\nconst BsFullscreen = (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"24\", height: \"24\", fill: \"currentColor\", viewBox: \"0 0 16 16\" },\n    React.createElement(\"path\", { d: \"M1.5 1a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4A1.5 1.5 0 0 1 1.5 0h4a.5.5 0 0 1 0 1zM10 .5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 16 1.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5M.5 10a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 0 14.5v-4a.5.5 0 0 1 .5-.5m15 0a.5.5 0 0 1 .5.5v4a1.5 1.5 0 0 1-1.5 1.5h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5\" })));\nconst BsFullscreenExit = (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"24\", height: \"24\", fill: \"currentColor\", viewBox: \"0 0 16 16\" },\n    React.createElement(\"path\", { d: \"M5.5 0a.5.5 0 0 1 .5.5v4A1.5 1.5 0 0 1 4.5 6h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5m5 0a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 10 4.5v-4a.5.5 0 0 1 .5-.5M0 10.5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 6 11.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5m10 1a1.5 1.5 0 0 1 1.5-1.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0z\" })));\nconst CiVolume = (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\", fill: \"currentColor\" },\n    React.createElement(\"path\", { d: \"M17.849,20.934a1.555,1.555,0,0,1-.781-.212l-4.16-2.4a3.769,3.769,0,0,0-1.877-.5H7.214a2.631,2.631,0,0,1-2.628-2.627V8.809A2.631,2.631,0,0,1,7.214,6.182h3.817a3.747,3.747,0,0,0,1.877-.5l4.16-2.4a1.564,1.564,0,0,1,2.346,1.354V19.369a1.57,1.57,0,0,1-1.565,1.565ZM7.214,7.182A1.63,1.63,0,0,0,5.586,8.809v6.382a1.629,1.629,0,0,0,1.628,1.627h3.817a4.756,4.756,0,0,1,2.377.637l4.16,2.4a.543.543,0,0,0,.563,0,.553.553,0,0,0,.283-.487V4.632a.565.565,0,0,0-.846-.489l-4.16,2.4a4.753,4.753,0,0,1-2.377.637Z\" })));\nconst CiVolumeHigh = (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\", fill: \"currentColor\" },\n    React.createElement(\"g\", null,\n        React.createElement(\"path\", { d: \"M13.816,19.937a1.446,1.446,0,0,1-.717-.194L9.43,17.623a3.257,3.257,0,0,0-1.625-.434H4.439a2.379,2.379,0,0,1-2.375-2.376V9.187A2.378,2.378,0,0,1,4.439,6.812H7.805A3.257,3.257,0,0,0,9.43,6.376L13.1,4.259A1.437,1.437,0,0,1,15.255,5.5V18.5a1.424,1.424,0,0,1-.718,1.245A1.445,1.445,0,0,1,13.816,19.937ZM4.439,7.812A1.377,1.377,0,0,0,3.064,9.187v5.626a1.378,1.378,0,0,0,1.375,1.376H7.805a4.254,4.254,0,0,1,2.125.569L13.6,18.876a.439.439,0,0,0,.657-.38V5.5a.438.438,0,0,0-.657-.379L9.93,7.242a4.251,4.251,0,0,1-2.125.57Z\" }),\n        React.createElement(\"path\", { d: \"M18.407,6.262a7.79,7.79,0,0,1,.021,11.476c-.474.437.235,1.143.707.707a8.793,8.793,0,0,0-.021-12.89c-.474-.434-1.184.272-.707.707Z\" }),\n        React.createElement(\"path\", { d: \"M16.91,9.031a4.021,4.021,0,0,1,.012,5.938c-.474.438.234,1.143.707.707a5.025,5.025,0,0,0-.012-7.352c-.474-.434-1.183.272-.707.707Z\" }))));\nconst CiVolumeMute = (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"24\", height: \"24\", fill: \"currentColor\", viewBox: \"0 0 24 24\" },\n    React.createElement(\"g\", null,\n        React.createElement(\"path\", { d: \"M13.817,19.936a1.424,1.424,0,0,1-.719-.2L9.43,17.624a3.254,3.254,0,0,0-1.625-.436H4.44a2.377,2.377,0,0,1-2.375-2.375V9.187A2.378,2.378,0,0,1,4.44,6.811H7.805A3.257,3.257,0,0,0,9.43,6.377L13.1,4.259A1.438,1.438,0,0,1,15.255,5.5V18.5a1.423,1.423,0,0,1-.718,1.245A1.439,1.439,0,0,1,13.817,19.936ZM4.44,7.811A1.377,1.377,0,0,0,3.065,9.187v5.626A1.377,1.377,0,0,0,4.44,16.188H7.805a4.247,4.247,0,0,1,2.125.571L13.6,18.876a.437.437,0,0,0,.439,0,.433.433,0,0,0,.218-.379V5.5a.438.438,0,0,0-.657-.379L9.93,7.242a4.25,4.25,0,0,1-2.125.569Z\" }),\n        React.createElement(\"path\", { d: \"M17.606,14.445a.5.5,0,0,1-.7-.711c.17-.169.34-.349.52-.52l1.21-1.209c-.57-.581-1.15-1.161-1.73-1.74a.5.5,0,0,1,.7-.71l1.74,1.739,1.74-1.739a.5.5,0,0,1,.7.71l-1.73,1.74,1.73,1.729a.5.5,0,0,1-.7.711L19.343,12.7Z\" }))));\nconst FaPlay = (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 448 512\", width: \"24\", height: \"24\", fill: \"currentColor\" },\n    React.createElement(\"path\", { d: \"M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z\" })));\nconst FaPause = (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 448 512\", width: \"24\", height: \"24\", fill: \"currentColor\" },\n    React.createElement(\"path\", { d: \"M144 479H48c-26.5 0-48-21.5-48-48V79c0-26.5 21.5-48 48-48h96c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zm304-48V79c0-26.5-21.5-48-48-48h-96c-26.5 0-48 21.5-48 48v352c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48z\" })));\nconst FaClosedCaptioning = (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 576 512\", width: \"24\", height: \"24\", fill: \"currentColor\" },\n    React.createElement(\"path\", { d: \"M0 96C0 60.7 28.7 32 64 32H512c35.3 0 64 28.7 64 64V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96zM200 208c14.2 0 27 6.1 35.8 16c8.8 9.9 24 10.7 33.9 1.9s10.7-24 1.9-33.9c-17.5-19.6-43.1-32-71.5-32c-53 0-96 43-96 96s43 96 96 96c28.4 0 54-12.4 71.5-32c8.8-9.9 8-25-1.9-33.9s-25-8-33.9 1.9c-8.8 9.9-21.6 16-35.8 16c-26.5 0-48-21.5-48-48s21.5-48 48-48zm144 48c0-26.5 21.5-48 48-48c14.2 0 27 6.1 35.8 16c8.8 9.9 24 10.7 33.9 1.9s10.7-24 1.9-33.9c-17.5-19.6-43.1-32-71.5-32c-53 0-96 43-96 96s43 96 96 96c28.4 0 54-12.4 71.5-32c8.8-9.9 8-25-1.9-33.9s-25-8-33.9 1.9c-8.8 9.9-21.6 16-35.8 16c-26.5 0-48-21.5-48-48z\" })));\nconst FaRegClosedCaptioning = (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 576 512\", width: \"24\", height: \"24\", fill: \"currentColor\" },\n    React.createElement(\"path\", { d: \"M512 80c8.8 0 16 7.2 16 16V416c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V96c0-8.8 7.2-16 16-16H512zM64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H512c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64zM200 208c14.2 0 27 6.1 35.8 16c8.8 9.9 24 10.7 33.9 1.9s10.7-24 1.9-33.9c-17.5-19.6-43.1-32-71.5-32c-53 0-96 43-96 96s43 96 96 96c28.4 0 54-12.4 71.5-32c8.8-9.9 8-25-1.9-33.9s-25-8-33.9 1.9c-8.8 9.9-21.6 16-35.8 16c-26.5 0-48-21.5-48-48s21.5-48 48-48zm144 48c0-26.5 21.5-48 48-48c14.2 0 27 6.1 35.8 16c8.8 9.9 24 10.7 33.9 1.9s10.7-24 1.9-33.9c-17.5-19.6-43.1-32-71.5-32c-53 0-96 43-96 96s43 96 96 96c28.4 0 54-12.4 71.5-32c8.8-9.9 8-25-1.9-33.9s-25-8-33.9 1.9c-8.8 9.9-21.6 16-35.8 16c-26.5 0-48-21.5-48-48z\" })));\nconst IoSettings = (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\", width: \"24\", height: \"24\", fill: \"currentColor\" },\n    React.createElement(\"circle\", { cx: \"256\", cy: \"256\", r: \"48\" }),\n    React.createElement(\"path\", { d: \"M470.39 300l-.47-.38-31.56-24.75a16.11 16.11 0 01-6.1-13.33v-11.56a16 16 0 016.11-13.22L469.92 212l.47-.38a26.68 26.68 0 005.9-34.06l-42.71-73.9a1.59 1.59 0 01-.13-.22A26.86 26.86 0 00401 92.14l-.35.13-37.1 14.93a15.94 15.94 0 01-14.47-1.29q-4.92-3.1-10-5.86a15.94 15.94 0 01-8.19-11.82l-5.59-39.59-.12-.72A27.22 27.22 0 00298.76 26h-85.52a26.92 26.92 0 00-26.45 22.39l-.09.56-5.57 39.67a16 16 0 01-8.13 11.82 175.21 175.21 0 00-10 5.82 15.92 15.92 0 01-14.43 1.27l-37.13-15-.35-.14a26.87 26.87 0 00-32.48 11.34l-.13.22-42.77 73.95a26.71 26.71 0 005.9 34.1l.47.38 31.56 24.75a16.11 16.11 0 016.1 13.33v11.56a16 16 0 01-6.11 13.22L42.08 300l-.47.38a26.68 26.68 0 00-5.9 34.06l42.71 73.9a1.59 1.59 0 01.13.22 26.86 26.86 0 0032.45 11.3l.35-.13 37.07-14.93a15.94 15.94 0 0114.47 1.29q4.92 3.11 10 5.86a15.94 15.94 0 018.19 11.82l5.56 39.59.12.72A27.22 27.22 0 00213.24 486h85.52a26.92 26.92 0 0026.45-22.39l.09-.56 5.57-39.67a16 16 0 018.18-11.82c3.42-1.84 6.76-3.79 10-5.82a15.92 15.92 0 0114.43-1.27l37.13 14.95.35.14a26.85 26.85 0 0032.48-11.34 2.53 2.53 0 01.13-.22l42.71-73.89a26.7 26.7 0 00-5.89-34.11zm-134.48-40.24a80 80 0 11-83.66-83.67 80.21 80.21 0 0183.66 83.67z\" })));\nconst IoSettingsOutline = (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\", width: \"24\", height: \"24\", fill: \"currentColor\" },\n    React.createElement(\"path\", { d: \"M262.29 192.31a64 64 0 1057.4 57.4 64.13 64.13 0 00-57.4-57.4zM416.39 256a154.34 154.34 0 01-1.53 20.79l45.21 35.46a10.81 10.81 0 012.45 13.75l-42.77 74a10.81 10.81 0 01-13.14 4.59l-44.9-18.08a16.11 16.11 0 00-15.17 1.75A164.48 164.48 0 01325 400.8a15.94 15.94 0 00-8.82 12.14l-6.73 47.89a11.08 11.08 0 01-10.68 9.17h-85.54a11.11 11.11 0 01-10.69-8.87l-6.72-47.82a16.07 16.07 0 00-9-12.22 155.3 155.3 0 01-21.46-12.57 16 16 0 00-15.11-1.71l-44.89 18.07a10.81 10.81 0 01-13.14-4.58l-42.77-74a10.8 10.8 0 012.45-13.75l38.21-30a16.05 16.05 0 006-14.08c-.36-4.17-.58-8.33-.58-12.5s.21-8.27.58-12.35a16 16 0 00-6.07-13.94l-38.19-30A10.81 10.81 0 0149.48 186l42.77-74a10.81 10.81 0 0113.14-4.59l44.9 18.08a16.11 16.11 0 0015.17-1.75A164.48 164.48 0 01187 111.2a15.94 15.94 0 008.82-12.14l6.73-47.89A11.08 11.08 0 01213.23 42h85.54a11.11 11.11 0 0110.69 8.87l6.72 47.82a16.07 16.07 0 009 12.22 155.3 155.3 0 0121.46 12.57 16 16 0 0015.11 1.71l44.89-18.07a10.81 10.81 0 0113.14 4.58l42.77 74a10.8 10.8 0 01-2.45 13.75l-38.21 30a16.05 16.05 0 00-6.05 14.08c.33 4.14.55 8.3.55 12.47z\", fill: \"none\", stroke: \"currentColor\", \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\", \"stroke-width\": \"32\" })));\nconst RiMovieFill = (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", width: \"24\", height: \"24\", fill: \"currentColor\" },\n    React.createElement(\"path\", { d: \"M2 3.9934C2 3.44476 2.45531 3 2.9918 3H21.0082C21.556 3 22 3.44495 22 3.9934V20.0066C22 20.5552 21.5447 21 21.0082 21H2.9918C2.44405 21 2 20.5551 2 20.0066V3.9934ZM10.6219 8.41459C10.5562 8.37078 10.479 8.34741 10.4 8.34741C10.1791 8.34741 10 8.52649 10 8.74741V15.2526C10 15.3316 10.0234 15.4088 10.0672 15.4745C10.1897 15.6583 10.4381 15.708 10.6219 15.5854L15.5008 12.3328C15.5447 12.3035 15.5824 12.2658 15.6117 12.2219C15.7343 12.0381 15.6846 11.7897 15.5008 11.6672L10.6219 8.41459Z\" })));\nconst RiMovieLine = (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", width: \"24\", height: \"24\", fill: \"currentColor\" },\n    React.createElement(\"path\", { d: \"M2 3.9934C2 3.44476 2.45531 3 2.9918 3H21.0082C21.556 3 22 3.44495 22 3.9934V20.0066C22 20.5552 21.5447 21 21.0082 21H2.9918C2.44405 21 2 20.5551 2 20.0066V3.9934ZM4 5V19H20V5H4ZM10.6219 8.41459L15.5008 11.6672C15.6846 11.7897 15.7343 12.0381 15.6117 12.2219C15.5824 12.2658 15.5447 12.3035 15.5008 12.3328L10.6219 15.5854C10.4381 15.708 10.1897 15.6583 10.0672 15.4745C10.0234 15.4088 10 15.3316 10 15.2526V8.74741C10 8.52649 10.1791 8.34741 10.4 8.34741C10.479 8.34741 10.5562 8.37078 10.6219 8.41459Z\" })));\nconst TbRewindBackward10 = (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\", fill: \"none\", stroke: \"currentColor\", \"stroke-width\": \"2\", \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\" },\n    React.createElement(\"path\", { stroke: \"none\", d: \"M0 0h24v24H0z\", fill: \"none\" }),\n    React.createElement(\"path\", { d: \"M7 9l-3 -3l3 -3\" }),\n    React.createElement(\"path\", { d: \"M15.997 17.918a6.002 6.002 0 0 0 -.997 -11.918h-11\" }),\n    React.createElement(\"path\", { d: \"M6 14v6\" }),\n    React.createElement(\"path\", { d: \"M9 15.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z\" })));\nconst TbRewindForward10 = (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\", fill: \"none\", stroke: \"currentColor\", \"stroke-width\": \"2\", \"stroke-linecap\": \"round\", \"stroke-linejoin\": \"round\" },\n    React.createElement(\"path\", { stroke: \"none\", d: \"M0 0h24v24H0z\", fill: \"none\" }),\n    React.createElement(\"path\", { d: \"M17 9l3 -3l-3 -3\" }),\n    React.createElement(\"path\", { d: \"M8 17.918a5.997 5.997 0 0 1 -5 -5.918a6 6 0 0 1 6 -6h11\" }),\n    React.createElement(\"path\", { d: \"M12 14v6\" }),\n    React.createElement(\"path\", { d: \"M15 15.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z\" })));\nconst CgMiniPlayer = (React.createElement(\"svg\", { width: \"24\", height: \"24\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n    React.createElement(\"path\", { \"fill-rule\": \"evenodd\", \"clip-rule\": \"evenodd\", d: \"M3 6C3 4.34315 4.34315 3 6 3H18C19.6569 3 21 4.34315 21 6V18C21 19.6569 19.6569 21 18 21H6C4.34315 21 3 19.6569 3 18V6ZM6 5H18C18.5523 5 19 5.44772 19 6V12.2676C18.7058 12.0974 18.3643 12 18 12H14C12.8954 12 12 12.8954 12 14V18C12 18.3643 12.0974 18.7058 12.2676 19H6C5.44772 19 5 18.5523 5 18V6C5 5.44772 5.44772 5 6 5Z\", fill: \"currentColor\" })));\n\nconst RangeSlider = ({ min = 0, max = 100, value, changeHandler, color = \"white\", }) => {\n    const inputRef = useRef(null);\n    useEffect(() => {\n        const progress = (value / max) * 100;\n        if (inputRef.current) {\n            inputRef.current.style.background = `linear-gradient(to right,${color === \"orange\" ? \"#f50\" : color} ${progress}%, #ccc ${progress}%)`;\n        }\n    }, [value]);\n    return (React.createElement(\"input\", { className: `_6pp-basic-slider slider-theme-${color}`, ref: inputRef, type: \"range\", min: min, max: max, value: value, id: \"range\", onChange: changeHandler }));\n};\n\nconst speedOptions = [0.5, 0.75, 1, 1.25, 1.5, 2];\nconst prefixZero = new Intl.NumberFormat(undefined, {\n    minimumIntegerDigits: 2,\n});\nconst formatTime = (time) => {\n    const seconds = Math.floor(time % 60);\n    const minutes = Math.floor((time / 60) % 60);\n    const hours = Math.floor(time / 3600);\n    if (hours === 0)\n        return `${minutes}:${prefixZero.format(seconds)}`;\n    else\n        return `${hours}:${prefixZero.format(minutes)}:${prefixZero.format(seconds)}`;\n};\n// const deformatTime = (time: string) => {\n//   const timeArr = time.split(\":\").map((i) => Number(i) || 0);\n//   if (timeArr.length === 2) return timeArr[0] * 60 + timeArr[1];\n//   else return timeArr[0] * 3600 + timeArr[1] * 60 + timeArr[2];\n// };\nconst VideoPlayer = ({ width = \"40rem\", height = \"20.5rem\", src, poster, captions, qualityOptions = [480, 720, 1080, 1440], setQuality, }) => {\n    const settingsPanelRef = useRef(null);\n    const speedPanelRef = useRef(null);\n    const videoPlayerRef = useRef(null);\n    const isDragging = useRef(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isPaused, setIsPaused] = useState(true);\n    const [isMuted, setIsMuted] = useState(false);\n    const [volume, setVolume] = useState(50);\n    const [previousVolume, setPreviousVolume] = useState(volume);\n    const [speed, setSpeed] = useState(1);\n    // const [quality, setQuality] = useState(qualityOptions[0]);\n    const [isFullScreen, setIsFullScreen] = useState(false);\n    const [isTheater, setIsTheater] = useState(false);\n    const [isCaptions, setIsCaptions] = useState(false);\n    const [duration, setDuration] = useState(\"00:00\");\n    const [currentTime, setCurrentTime] = useState(\"0:0\");\n    const [buffered, setBuffered] = useState(0);\n    const [timelineProgress, setTimelineProgress] = useState(0);\n    const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n    const [isSpeedOpen, setIsSpeedOpen] = useState(false);\n    const toggleSettings = () => setIsSettingsOpen((prev) => !prev);\n    const toggleSpeed = () => setIsSpeedOpen((prev) => !prev);\n    const toggleCaptions = () => setIsCaptions((prev) => !prev);\n    const toggleTheater = () => setIsTheater((prev) => !prev);\n    const handlePlayPause = () => setIsPaused((prev) => {\n        if (prev) {\n            videoPlayerRef.current?.play();\n        }\n        else {\n            videoPlayerRef.current?.pause();\n        }\n        return !prev;\n    });\n    const handleFullScreenChange = () => {\n        if (isFullScreen) {\n            document.exitFullscreen();\n        }\n        else {\n            document.documentElement.requestFullscreen();\n        }\n        setIsFullScreen((prev) => !prev);\n    };\n    const handleMiniPlayerChange = () => videoPlayerRef.current?.requestPictureInPicture();\n    const handleSpeedChange = (speed) => {\n        setSpeed(speed);\n        toggleSpeed();\n    };\n    const handleQualityChange = (quality) => {\n        setQuality(quality);\n        toggleSettings();\n    };\n    const handleRewindBackward10 = () => {\n        const player = videoPlayerRef.current;\n        if (!player)\n            return;\n        player.currentTime -= 10;\n    };\n    const handleRewindForward10 = () => {\n        const player = videoPlayerRef.current;\n        if (!player)\n            return;\n        player.currentTime += 10;\n    };\n    const handleMuteUnmute = () => setIsMuted((prev) => {\n        if (prev)\n            setVolume(previousVolume);\n        else {\n            setPreviousVolume(volume);\n            setVolume(0);\n        }\n        return !prev;\n    });\n    const handleMouseDown = () => {\n        isDragging.current = true;\n    };\n    const handleMouseMove = (e) => {\n        if (!isDragging.current)\n            return;\n        e.preventDefault();\n        const rect = e.currentTarget.getBoundingClientRect();\n        const percent = (Math.min(Math.max(0, e.clientX - rect.left), rect.width) / rect.width) *\n            100;\n        setTimelineProgress(percent);\n    };\n    const handleMouseUp = (e) => {\n        const videoPlayer = videoPlayerRef.current;\n        if (!videoPlayer)\n            return;\n        isDragging.current = false;\n        const rect = e.currentTarget.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        const percentage = (x / rect.width) * 100;\n        const time = (percentage / 100) * videoPlayer.duration;\n        videoPlayer.currentTime = time;\n    };\n    const handleClickOutside = useCallback((event) => {\n        if (settingsPanelRef.current &&\n            !settingsPanelRef.current.contains(event.target)) {\n            setIsSettingsOpen(false);\n        }\n        if (speedPanelRef.current &&\n            !speedPanelRef.current.contains(event.target)) {\n            setIsSpeedOpen(false);\n        }\n    }, []);\n    const handleKeyDown = useCallback((e) => {\n        e.preventDefault();\n        if (e.key === \"Escape\") {\n            document.exitFullscreen();\n            setIsFullScreen(false);\n        }\n        if (e.key === \"f\") {\n            handleFullScreenChange();\n        }\n        if (e.key === \"m\") {\n            handleMuteUnmute();\n        }\n        if (e.key === \" \") {\n            handlePlayPause();\n        }\n        if (e.key === \"s\") {\n            toggleSettings();\n        }\n        if (e.key === \"c\") {\n            toggleCaptions();\n        }\n        if (e.key === \"t\") {\n            toggleTheater();\n        }\n        if (e.key === \"ArrowRight\") {\n            handleRewindForward10();\n        }\n        if (e.key === \"ArrowLeft\") {\n            handleRewindBackward10();\n        }\n    }, [\n        handleFullScreenChange,\n        handleMuteUnmute,\n        handlePlayPause,\n        handleRewindBackward10,\n        handleRewindForward10,\n        toggleCaptions,\n        toggleSettings,\n        toggleTheater,\n    ]);\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        document.addEventListener(\"keydown\", handleKeyDown);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n            document.removeEventListener(\"keydown\", handleKeyDown);\n        };\n    }, [handleClickOutside, handleKeyDown]);\n    const loadedDataHandler = useCallback(() => {\n        const player = videoPlayerRef.current;\n        if (player)\n            setDuration(formatTime(videoPlayerRef.current.duration));\n    }, [videoPlayerRef.current]);\n    const timeupdateHandler = useCallback(() => {\n        const player = videoPlayerRef.current;\n        if (player) {\n            setCurrentTime(formatTime(player.currentTime));\n            if (isDragging.current === false)\n                setTimelineProgress((player.currentTime / player.duration) * 100);\n            let bufferedPercentage = 0;\n            if (player.buffered.length > 0) {\n                bufferedPercentage =\n                    (player.buffered.end(player.buffered.length - 1) / player.duration) *\n                        100;\n            }\n            setBuffered(bufferedPercentage);\n        }\n    }, [setCurrentTime, setTimelineProgress, setBuffered]);\n    useEffect(() => {\n        const videoPlayer = videoPlayerRef.current;\n        if (videoPlayer) {\n            videoPlayer.addEventListener(\"loadeddata\", loadedDataHandler);\n            videoPlayer.addEventListener(\"timeupdate\", timeupdateHandler);\n        }\n        return () => {\n            if (videoPlayer) {\n                videoPlayer.removeEventListener(\"loadeddata\", loadedDataHandler);\n                videoPlayer.removeEventListener(\"timeupdate\", timeupdateHandler);\n            }\n        };\n    }, [loadedDataHandler, timeupdateHandler, videoPlayerRef.current]);\n    useEffect(() => {\n        if (volume === 0) {\n            setIsMuted(true);\n        }\n        else {\n            setIsMuted(false);\n        }\n    }, [volume]);\n    useEffect(() => {\n        if (videoPlayerRef.current)\n            videoPlayerRef.current.playbackRate = speed;\n    }, [speed]);\n    useEffect(() => {\n        if (videoPlayerRef.current)\n            videoPlayerRef.current.volume = volume / 100;\n    }, [volume]);\n    useEffect(() => {\n        if (videoPlayerRef.current) {\n            if (isCaptions) {\n                videoPlayerRef.current.textTracks[0].mode = \"showing\";\n            }\n            else {\n                videoPlayerRef.current.textTracks[0].mode = \"hidden\";\n            }\n        }\n        return () => {\n            if (videoPlayerRef.current) {\n                videoPlayerRef.current.textTracks[0].mode = \"hidden\";\n            }\n        };\n    }, [isCaptions]);\n    useEffect(() => {\n        return () => {\n            setIsPaused(true);\n            setIsSettingsOpen(false);\n            setIsSpeedOpen(false);\n            setTimelineProgress(0);\n            setBuffered(0);\n            setIsLoading(false);\n            setSpeed(1);\n        };\n    }, [src, poster]);\n    const SettingPanel = isSettingsOpen && (React.createElement(\"div\", { ref: settingsPanelRef, className: \"_6pp-video-player-setting-panel\" },\n        React.createElement(\"ul\", null, qualityOptions.map((i, idx) => (React.createElement(\"li\", { key: i, style: {\n                borderTopLeftRadius: idx === 0 ? \"0.5rem\" : 0,\n                borderTopRightRadius: idx === 0 ? \"0.5rem\" : 0,\n                borderBottomLeftRadius: idx === qualityOptions.length - 1 ? \"0.5rem\" : 0,\n                borderBottomRightRadius: idx === qualityOptions.length - 1 ? \"0.5rem\" : 0,\n            }, onClick: () => handleQualityChange(i) },\n            i,\n            \"p\"))))));\n    const SpeedPanel = isSpeedOpen && (React.createElement(\"div\", { ref: speedPanelRef, className: \"_6pp-video-player-speed-panel\" },\n        React.createElement(\"ul\", null, speedOptions.map((i, idx) => (React.createElement(\"li\", { key: i, style: {\n                borderTopLeftRadius: idx === 0 ? \"0.5rem\" : 0,\n                borderTopRightRadius: idx === 0 ? \"0.5rem\" : 0,\n                borderBottomLeftRadius: idx === speedOptions.length - 1 ? \"0.5rem\" : 0,\n                borderBottomRightRadius: idx === speedOptions.length - 1 ? \"0.5rem\" : 0,\n            }, onClick: () => handleSpeedChange(i) },\n            i,\n            \"x\"))))));\n    const TimeLine = (React.createElement(\"div\", { className: \"_6pp-video-player-timeline-container\", onMouseMove: handleMouseMove, onMouseUp: handleMouseUp, onMouseDown: handleMouseDown },\n        React.createElement(\"div\", { className: \"_6pp-video-player-timeline-thumb\", style: {\n                left: `${timelineProgress}%`,\n            } }),\n        React.createElement(\"div\", { className: \"_6pp-video-player-timeline-progress\", style: {\n                width: `${timelineProgress}%`,\n            } }),\n        React.createElement(\"div\", { className: \"_6pp-video-player-timeline-buffer-progress\", style: {\n                width: `${buffered}%`,\n            } })));\n    const ControlsPanel = (React.createElement(\"div\", { className: \"_6pp-video-player-controls\" },\n        React.createElement(\"button\", { title: \"Rewind Backward 10 Seconds\", onClick: handleRewindBackward10 }, TbRewindBackward10),\n        React.createElement(\"button\", { disabled: isLoading, onClick: handlePlayPause, title: isPaused ? \"Play\" : \"Pause\" }, isPaused ? FaPlay : FaPause),\n        React.createElement(\"button\", { title: \"Fast Forward 10 Seconds\", onClick: handleRewindForward10 }, TbRewindForward10),\n        React.createElement(\"button\", { title: \"Volume\", onClick: handleMuteUnmute }, isMuted ? CiVolumeMute : volume > 50 ? CiVolumeHigh : CiVolume),\n        React.createElement(\"div\", { className: \"_6pp-video-player-volume-slider\" },\n            React.createElement(RangeSlider, { value: volume, changeHandler: (e) => setVolume(Number(e.target.value)) })),\n        React.createElement(\"div\", { className: \"_6pp-video-player-duration\" },\n            React.createElement(\"span\", null, currentTime),\n            \" \",\n            React.createElement(\"span\", null, \"/\"),\n            \" \",\n            React.createElement(\"span\", null, duration)),\n        React.createElement(\"button\", { style: { marginLeft: \"auto\" }, onClick: toggleSettings, title: \"Settings\" }, isSettingsOpen ? IoSettings : IoSettingsOutline),\n        React.createElement(\"button\", { title: isCaptions ? \"Hide Captions\" : \"Show Captions\", onClick: toggleCaptions }, isCaptions ? FaClosedCaptioning : FaRegClosedCaptioning),\n        React.createElement(\"button\", { title: \"Plackback Speed\", style: { fontSize: \"1.25rem\" }, onClick: toggleSpeed },\n            speed,\n            \"x\"),\n        React.createElement(\"button\", { onClick: handleMiniPlayerChange, title: \"Mini Player\" }, CgMiniPlayer),\n        React.createElement(\"button\", { onClick: toggleTheater, title: isTheater ? \"Exit Theater Mode\" : \"Theater Mode\" }, isTheater ? RiMovieFill : RiMovieLine),\n        React.createElement(\"button\", { onClick: handleFullScreenChange, title: isFullScreen ? \"Exit Full Screen\" : \"Full Screen\" }, isFullScreen ? BsFullscreenExit : BsFullscreen)));\n    const Loader = (React.createElement(\"div\", { className: \"_6pp-video-player-loading\" },\n        React.createElement(\"div\", { className: \"_6pp-video-player-loading-spinner\" })));\n    return (React.createElement(\"div\", { className: \"_6pp-video-player-container\", style: {\n            width: isFullScreen ? \"100vw\" : isTheater ? \"100%\" : width,\n            height: isFullScreen ? \"100vh\" : isTheater ? \"70vh\" : height,\n            position: isFullScreen ? \"fixed\" : \"relative\",\n        }, onContextMenu: (e) => e.preventDefault() },\n        SettingPanel,\n        SpeedPanel,\n        React.createElement(\"div\", { className: \"_6pp-video-player-controls-container\" },\n            TimeLine,\n            ControlsPanel),\n        isLoading ? Loader : null,\n        React.createElement(\"video\", { ref: videoPlayerRef, src: src, className: \"_6pp-video-player-video\", style: {\n                filter: isLoading ? \"blur(5px)\" : \"none\",\n            }, onClick: handlePlayPause, poster: poster, onWaiting: () => setIsLoading(true), onPlaying: () => setIsLoading(false) },\n            React.createElement(\"track\", { src: captions, kind: \"captions\", srcLang: \"en\", label: \"English\" })),\n        React.createElement(\"div\", { className: \"_6pp-video-player-backdrop\" })));\n};\n\nexport { FireBolt, MyntraCarousel, PageStepper, Pagination, RangeSlider, Slider, StylishCarousel, VideoPlayer, isDateBetween, isIncludeCapitalLetter, isIncludeLowercaseLetter, isIncludeNumber, isIncludeSpecialChar, isValidDate, isValidDateTime, isValidEmail, isValidPhoneNumber, isValidTime, isValidUrl, isValidUsername, useConfirmModal, useFetchData, useFileHandler, useInfiniteScrollBottom, useInfiniteScrollTop, useInputValidation, useRating, useStrongPassword };\n"],"names":["createSvgIcon","_jsx","cx","cy","r","d","Map","useFileHandler","type","limitInMb","arguments","length","undefined","maxFiles","initialFile","initialPreview","error","setError","useState","file","setFile","preview","setPreview","changeHandler","e","target","files","singleFile","size","reader","FileReader","readAsDataURL","onloadend","result","Array","from","concat","item","prev","isArray","clear","memo","_ref13","color","styles","zoom","mode","Error","circles","useRef","coordinates","x","y","fireBoltZoomRef","handleMouseMove","current","clientX","clientY","fireboltZoom","getAttribute","Boolean","animateCircles","useCallback","cursors","forEach","circle","idx","style","left","top","newSize","scale","toString","nextCircle","Number","requestAnimationFrame","useEffect","document","getElementsByClassName","window","addEventListener","removeEventListener","React","zIndex","mixBlendMode","pointerEvents","map","_","i","className","key","position","height","width","borderRadius","backgroundColor","userSelect","transition","xmlns","fill","viewBox","stroke","Intl","NumberFormat","minimumIntegerDigits"],"sourceRoot":""}