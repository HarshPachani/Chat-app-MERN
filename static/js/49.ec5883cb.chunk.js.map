{"version":3,"file":"static/js/49.ec5883cb.chunk.js","mappings":"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","sources":["shared/RenderAttachment.js","components/MessageComponent.jsx","components/ChatHeader.jsx","dialogs/FileMenu.jsx","pages/Chat.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { transformImage } from \"../lib/features\";\r\nimport { FileOpen as FileOpenIcon } from \"@mui/icons-material\";\r\n\r\nconst RenderAttachment = (file, url) => {\r\n  switch (file) {\r\n    case \"video\":\r\n      return <video src={url} preload=\"none\" width={\"200px\"} controls></video>;\r\n\r\n    case \"image\":\r\n        return <img\r\n        src={transformImage(url, 200)}\r\n        alt=\"Attachment\"\r\n        width={\"200px\"}\r\n        height={\"150px\"}\r\n        style={{\r\n            objectFit: 'contain'\r\n        }}\r\n        />;\r\n    \r\n    case \"audio\":\r\n        return <video src={url} preload=\"none\" width={\"200px\"} controls></video>;\r\n    default:\r\n      return <FileOpenIcon />\r\n  } \r\n};\r\n\r\nexport default RenderAttachment;\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React, { memo } from \"react\";\r\nimport moment from \"moment\";\r\nimport { fileFormat } from \"../lib/features\";\r\nimport RenderAttachment from \"../shared/RenderAttachment\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst MessageComponent = ({ message, user, groupChat }) => {\r\n  const { sender, content, attachments = [], createdAt } = message;\r\n  const sameSender = sender?._id === user?._id;\r\n\r\n  const { theme } = useSelector(store => store.chat);\r\n  const timeAgo = moment(createdAt).format('h:mm A YYYY');\r\n\r\n  return (\r\n    // For Animation\r\n    <>\r\n    <motion.div\r\n      initial = {{ opacity: 0, x: '-100%' }}\r\n      whileInView={{ opacity: 1, x: 0 }}\r\n\r\n      style={{\r\n        alignSelf: sameSender ? \"flex-end\" : \"flex-start\",\r\n        width: \"fit-content\",\r\n    }}\r\n    >\r\n        <div\r\n            style={{\r\n                backgroundColor: sameSender && attachments.length === 0 ? theme : 'rgb(238, 238, 238)',\r\n                borderRadius: sameSender ? '15px 15px 0px 15px' : '15px 15px 15px 0px',\r\n                padding: \"0.5rem\",\r\n                color: sameSender && attachments.length === 0 ? 'white' : 'black',\r\n                overflow: 'auto'\r\n            }}\r\n        >\r\n            {(!sameSender && groupChat) && (\r\n                <Typography color={theme} fontWeight={\"600\"} variant=\"caption\">\r\n                {sender.name}\r\n                </Typography>\r\n            )}\r\n            {content && <Typography>{content}</Typography>}\r\n            {/* Attachment */}\r\n            {attachments.length > 0 &&\r\n                attachments.map((attachment, index) => {\r\n                const url = attachment.url;\r\n                const file = fileFormat(url);\r\n\r\n                return (\r\n                    <Box key={index}>\r\n                        <a\r\n                            href={url}\r\n                            target=\"_blank\"\r\n                            download\r\n                            style={{\r\n                                color: \"black\",\r\n                            }}\r\n                        >\r\n                            {RenderAttachment(file, url)}\r\n                        </a>\r\n                    </Box>\r\n                );\r\n            })}\r\n        </div>\r\n        <Typography\r\n            variant=\"caption\"\r\n            color=\"text.secondary\"\r\n            style = {{\r\n                alignSelf: sameSender ? 'flex-end' : '',\r\n                width: 'fit-content'\r\n            }}\r\n        >\r\n            {timeAgo}\r\n        </Typography>\r\n    </motion.div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(MessageComponent);\r\n","import { Avatar, Box, Tooltip, Typography, IconButton } from '@mui/material'\r\nimport React, { memo, useCallback, useEffect, useState } from 'react'\r\nimport { white } from '../constants/color'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { KeyboardBackspace as KeyboardBackspaceIcon } from '@mui/icons-material'\r\nimport AvatarCard from '../shared/AvatarCard'\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { useSocketEvents } from '../hooks/Hook'\r\nimport { ONLINE_USERS } from '../constants/events'\r\n\r\nconst ChatHeader = ({ socket, chatMemberDetails, handleDeleteChat }) => {\r\n    const navigate = useNavigate();\r\n    const params = useParams();\r\n    const id = params?.id;\r\n    const [isOnline, setIsOnline] = useState(false);\r\n    const [onlineUserList, setOnlineUserList] = useState([]);\r\n\r\n    const onlineUserListener = useCallback((data) => {\r\n        setOnlineUserList(data);\r\n    }, [chatMemberDetails]);\r\n\r\n    useEffect(() => {\r\n        if (chatMemberDetails) {\r\n            const userId = chatMemberDetails?.chatAvatar?.[0]?._id;\r\n            const isUserOnline = onlineUserList.includes(userId);\r\n            setIsOnline(isUserOnline);\r\n        }\r\n    }, [chatMemberDetails, onlineUserList]);\r\n\r\n    const eventHandlers = {\r\n        [ONLINE_USERS]: onlineUserListener,\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.emit(ONLINE_USERS, {});\r\n    }, []);\r\n\r\n    useSocketEvents(socket, eventHandlers);\r\n\r\n\r\n    const navigateBack = () => navigate('/')\r\n\r\n  return (\r\n    <Box\r\n        sx={{\r\n            display: 'flex',\r\n            backgroundColor: white,\r\n            borderRadius: '15px',\r\n            padding: '5px',\r\n            position: 'sticky',\r\n            top: 'auto',\r\n            zIndex: 100,\r\n        }}\r\n        margin={'5px'}\r\n    >\r\n        <Tooltip title=\"back\">\r\n            <IconButton\r\n                sx={{\r\n                    color: 'black',\r\n                }}\r\n                onClick={navigateBack}\r\n            >\r\n                <KeyboardBackspaceIcon />\r\n            </IconButton>\r\n        </Tooltip>\r\n            \r\n        {chatMemberDetails?.chatAvatar ? \r\n            <AvatarCard avatar={chatMemberDetails?.chatAvatar}/>\r\n            :\r\n            <Avatar />\r\n        }\r\n        <Box \r\n            sx={{\r\n                marginLeft: { xs: '0.5rem', sm: '1rem' }\r\n            }}\r\n        >\r\n            <Typography variant='h5'>{chatMemberDetails?.chatName}</Typography>\r\n            {\r\n                chatMemberDetails?.isGroupChat ? \r\n                <Tooltip title={`You, ${chatMemberDetails?.chatAvatar?.map(member => member.name).join(',')}`}>\r\n                    <Typography sx={{\r\n                        color: 'gray',\r\n                        fontSize: '0.85rem',\r\n                        whiteSpace: 'nowrap',\r\n                        overflow: 'hidden',\r\n                        textOverflow: 'ellipsis',\r\n                        width: {xs: '60%', md: '100%'},\r\n                    }}>\r\n                        {`You, ${chatMemberDetails?.chatAvatar?.map(member => member.name).join(',')}`}\r\n                    </Typography>\r\n                </Tooltip>\r\n                : \r\n                isOnline && (\r\n                <Typography sx={{\r\n                    fontSize: '0.85rem',\r\n                    color: 'green',\r\n                    opacity: isOnline ? 1 : 0,\r\n                    transition: 'opacity 1s ease-in',\r\n                }}>online</Typography>)\r\n            }\r\n        </Box>\r\n        <IconButton\r\n            sx={{\r\n                position: 'absolute',\r\n                right: '0',\r\n                color: 'black'\r\n            }}\r\n            onClick={(e) => handleDeleteChat(e, id, chatMemberDetails?.isGroupChat)}\r\n        >\r\n            <MoreVertIcon />\r\n        </IconButton>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default memo(ChatHeader)","import { ListItemText, Menu, MenuItem, MenuList, Tooltip } from '@mui/material';\r\nimport React, { useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIsFileMenu, setUploadingLoader } from '../redux/reducers/misc';\r\nimport { AudioFile as AudioFileIcon, Image as ImageIcon, UploadFile as UploadFileIcon, VideoFile as VideoFileIcon } from '@mui/icons-material';\r\nimport toast from 'react-hot-toast';\r\nimport { useSendAttachmentsMutation } from '../redux/api/api';\r\n\r\nconst FileMenu = ({ anchorE1, chatId }) => {\r\n    const { isFileMenu } = useSelector(store => store.misc);\r\n    const dispatch = useDispatch();\r\n\r\n    const imageRef = useRef(null);\r\n    const videoRef = useRef(null);\r\n    const audioRef = useRef(null);\r\n    const fileRef = useRef(null);\r\n\r\n    const [sendAttachments] = useSendAttachmentsMutation();\r\n\r\n    const closeFileMenu = () => {\r\n        dispatch(setIsFileMenu(false));    \r\n    };\r\n\r\n    const selectImage = () => imageRef.current?.click()\r\n    const selectVideo = () => imageRef.current?.click()\r\n    const selectAudio = () => imageRef.current?.click()\r\n    const selectFile = () => imageRef.current?.click()\r\n\r\n    const fileChangeHandler = async (e, key) => {\r\n        const files = Array.from(e.target.files);\r\n        if(files.length <= 0) \r\n            return;\r\n        if(files.length > 2)\r\n            return toast.error(`You can only send two ${key} at a time.`);\r\n        dispatch(setUploadingLoader(true));\r\n        const toastId = toast.loading(`Sending ${key}`);\r\n        closeFileMenu();\r\n\r\n        try {\r\n            const myForm = new FormData();\r\n            myForm.append('chatId', chatId);\r\n            files.forEach(file => myForm.append('files', file));\r\n\r\n            const res = await sendAttachments(myForm);\r\n            if(res.data)\r\n                toast.success(`${key} sent successfully`, { id: toastId }); \r\n            else {\r\n                if(res?.error?.data?.message) \r\n                    toast.error(res?.error?.data?.message, { id: toastId });\r\n                else \r\n                    toast.error(`Failed to send ${key}`, { id: toastId });\r\n            }\r\n        } catch (error) {\r\n            toast.error(error, { id: toastId })\r\n        } finally {\r\n            dispatch(setUploadingLoader(false));\r\n        }\r\n    };\r\n\r\n  return (\r\n    <Menu anchorEl={anchorE1} open={isFileMenu} onClose={closeFileMenu}>\r\n        <div style={{ width: '10rem' }}>\r\n            <MenuList>\r\n                <MenuItem onClick={selectImage}>\r\n                    <Tooltip title='Image'>\r\n                        <ImageIcon />\r\n                    </Tooltip>\r\n                    <ListItemText style={{ marginLeft: '0.5rem' }}>Image</ListItemText>\r\n                    <input \r\n                        ref={imageRef}\r\n                        type='file' \r\n                        multiple\r\n                        accept='image/png, image/jpeg, image/gif'\r\n                        style={{ display: 'none' }}\r\n                        onChange={(e) => fileChangeHandler(e, 'Images')}\r\n                    />\r\n                </MenuItem>\r\n\r\n                <MenuItem onClick={selectAudio}>\r\n                    <Tooltip title='Audio'>\r\n                    <AudioFileIcon />\r\n                    </Tooltip>\r\n                    <ListItemText style={{ marginLeft: '0.5rem' }}>Audio</ListItemText>\r\n                    <input\r\n                    ref={audioRef}\r\n                    type='file'\r\n                    multiple\r\n                    accept='audio/mpeg, audio/wav'\r\n                    style={{ display: 'none' }}\r\n                    onChange={(e) => fileChangeHandler(e, 'Audios')}\r\n                    />\r\n                </MenuItem>\r\n\r\n                <MenuItem onClick={selectVideo}>\r\n                    <Tooltip title='Video'>\r\n                    <VideoFileIcon />\r\n                    </Tooltip>\r\n                    <ListItemText style={{ marginLeft: '0.5rem' }}>Video</ListItemText>\r\n                    <input\r\n                    type='file'\r\n                    ref={videoRef}\r\n                    multiple\r\n                    accept='video/mp4, video/webm, video/ogg'\r\n                    style={{ display: 'none' }}\r\n                    onChange={(e) => fileChangeHandler(e, 'Videos')}\r\n                    />\r\n                </MenuItem>\r\n\r\n                <MenuItem onClick={selectFile}>\r\n                    <Tooltip title='File'>\r\n                    <UploadFileIcon />\r\n                    </Tooltip>\r\n                    <ListItemText style={{ marginLeft: '0.5rem' }}>File</ListItemText>\r\n                    <input\r\n                    type='file'\r\n                    ref={fileRef}\r\n                    multiple\r\n                    accept='*'\r\n                    style={{ display: 'none' }}\r\n                    onChange={(e) => fileChangeHandler(e, 'Files')}\r\n                    />\r\n                </MenuItem>\r\n            </MenuList>\r\n        </div>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default FileMenu","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport AppLayout from '../components/AppLayout'\r\nimport { Box, CircularProgress, IconButton, Stack } from '@mui/material'\r\nimport { gray, white } from '../constants/color'\r\nimport { AttachFile as AttachFileIcon, Send as SendIcon } from '@mui/icons-material'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport MessageComponent from '../components/MessageComponent'\r\nimport { InputBox } from '../styles/StyledComponents'\r\nimport { useSocket } from '../context/socket'\r\nimport { ALERT, CHAT_JOINED, GROUP_USER_STOPPED_TYPING, GROUP_USER_TYPING, NEW_MESSAGE, START_TYPING, STOP_TYPING } from '../constants/events'\r\nimport { useGetChatDetailsQuery, useGetMessagesQuery, useGetOtherChatMemberQuery } from '../redux/api/api'\r\nimport { useErrors, useSocketEvents } from '../hooks/Hook'\r\nimport { TypingLoader } from '../layout/Loaders'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeNewMessagesAlert } from '../redux/reducers/chat'\r\nimport ChatHeader from '../components/ChatHeader'\r\nimport { setIsFileMenu } from '../redux/reducers/misc'\r\nimport FileMenu from '../dialogs/FileMenu'\r\n\r\nconst Chat = ({ chatId, user, chats=[], handleDeleteChat }) => {\r\n    const navigate = useNavigate();\r\n    const [message, setMessage] = useState('');\r\n    const [page, setPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [groupUser, setGroupUser] = useState('');\r\n\r\n    const bottomRef = useRef(null);\r\n    const typingTimeout = useRef(null);\r\n    const chatListRef = useRef(null);\r\n    const inputRef = useRef(null);\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [userTyping, setUserTyping] = useState('');\r\n    const [iAmTyping, setIAmTyping] = useState(false);\r\n    const [fileMenuAnchor, setFileMenuAnchor] = useState(null);\r\n\r\n    const socket = useSocket();\r\n    const dispatch = useDispatch();\r\n\r\n    const chatDetails = useGetChatDetailsQuery({ chatId, skip: !chatId });\r\n    const members = chatDetails?.data?.chat?.members;\r\n    const { data, isLoading } = useGetMessagesQuery({ chatId, page });\r\n    const { data: chatMemberDetails } = useGetOtherChatMemberQuery({ chatId });\r\n\r\n    const { theme } = useSelector(store => store.chat);\r\n\r\n    const errors = [\r\n        { isError: chatDetails.isError, error: chatDetails.error },\r\n      ];\r\n    \r\n    useEffect(() => {\r\n        socket.emit(CHAT_JOINED, { userId: user?._id, members })\r\n        dispatch(removeNewMessagesAlert(chatId));\r\n\r\n        return () => {\r\n            setMessages([]);\r\n            setMessage('');\r\n            setPage(1);\r\n            setTotalPages(0);\r\n        }\r\n    }, [chatId]);\r\n\r\n    useEffect(() => {\r\n        if(bottomRef.current && page===1) bottomRef.current.scrollIntoView({ behaviour: 'smooth' });\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        if(data) {\r\n            setTotalPages(data?.totalPages);\r\n            setMessages(data ? [...data.messages, ...messages] : [...messages]);\r\n        }\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            if (chatListRef.current.scrollTop === 0) {\r\n                if(page === totalPages) {\r\n                    setPage(totalPages)\r\n                    return;\r\n                }\r\n                setPage(prev => prev + 1);\r\n            }\r\n        };\r\n\r\n        const chatListElement = chatListRef.current;\r\n        chatListElement.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            chatListElement.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, [totalPages, page]);\r\n\r\n\r\n    const handleMessageChange = (e) => {\r\n        setMessage(e.target.value);\r\n\r\n        if(!iAmTyping){\r\n            if(chatMemberDetails?.isGroupChat){\r\n                socket.emit(GROUP_USER_TYPING, { userId: user._id, username: user.name, chatId })\r\n            }\r\n            setIAmTyping(true);\r\n        }\r\n        socket.emit(START_TYPING, { members, chatId })\r\n\r\n        if(typingTimeout.current) clearTimeout(typingTimeout.current);\r\n\r\n        typingTimeout.current = setTimeout(() => {\r\n            if(chatMemberDetails?.isGroupChat)\r\n                socket.emit(GROUP_USER_STOPPED_TYPING);\r\n            socket.emit(STOP_TYPING, { members, chatId });\r\n            setIAmTyping(false);\r\n        }, 1500);\r\n    }\r\n\r\n    const handleFileOpen = (e) => {\r\n        dispatch(setIsFileMenu(true));\r\n        setFileMenuAnchor(e.currentTarget);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if(!message.trim()) return;\r\n\r\n        socket.emit(NEW_MESSAGE, { chatId, members, message });\r\n        setMessage('');\r\n        inputRef.current.focus();\r\n    }\r\n\r\n    const newMessagesListener = useCallback((data) => {\r\n        if(data.chatId !== chatId) return;\r\n        setMessages((prev) => [...prev, data?.message])\r\n    }, [chatId]);\r\n\r\n    const startTypingListener = useCallback((data) => {\r\n        if(data.chatId !== chatId) return;\r\n        setUserTyping(true);\r\n    }, [chatId]);\r\n\r\n    const stopTypingListener = useCallback((data) => {\r\n        if(data.chatId !== chatId) return;\r\n        setUserTyping(false);\r\n    }, [chatId]);\r\n\r\n    const alertListener = useCallback((data) => {\r\n        if(data.chatId !== chatId) return;\r\n        const messageForAlert = {\r\n          content: data.message,\r\n          sender: {\r\n              _id: 'jaflkjlfakjlkdajljf',\r\n              name: 'Admin'\r\n          },\r\n          chat: chatId,\r\n          createdAt: new Date().toISOString(),\r\n        };\r\n    \r\n        setMessages((prev) => [...prev, messageForAlert]);\r\n    \r\n    }, [chatId]);\r\n\r\n    const handleGroupUserTyping = ({userId, username, chatId: currentChat}) => {\r\n        if(chatId !== currentChat) return;\r\n        if(chatMemberDetails?.isGroupChat)\r\n            setGroupUser(username);\r\n    };\r\n\r\n    const handleGroupUserStoppedTyping = () => {\r\n        if(chatMemberDetails?.isGroupChat)\r\n            setGroupUser();\r\n    };\r\n\r\n    const eventHandlers = {\r\n        [ALERT]: alertListener,\r\n        [NEW_MESSAGE]: newMessagesListener,\r\n        [START_TYPING]: startTypingListener,\r\n        [STOP_TYPING]: stopTypingListener,\r\n        [GROUP_USER_TYPING]: handleGroupUserTyping,\r\n        [GROUP_USER_STOPPED_TYPING]: handleGroupUserStoppedTyping,\r\n    }\r\n\r\n    useSocketEvents(socket, eventHandlers);\r\n    useErrors(errors);\r\n    const chatMember = [];\r\n  return (\r\n    <Box\r\n        sx={{\r\n            display: 'flex',\r\n            position: 'relative',\r\n            flexDirection: 'column',\r\n            borderBottom: '1px solid black',\r\n            width: { xs: '100%', sm: '70%'},\r\n            height: '100vh',\r\n        }}\r\n    >\r\n        <ChatHeader socket={socket} chatMemberDetails={chatMemberDetails} handleDeleteChat={handleDeleteChat} />\r\n        <Stack\r\n            ref={chatListRef}\r\n            boxSizing='border-box'\r\n            spacing='1rem'\r\n            padding='1rem'\r\n            bgcolor={white}\r\n            height={'100%'}\r\n            sx={{\r\n                position: 'relative',\r\n                overflowX: 'hidden',\r\n                overflowY: 'scroll',\r\n                borderRadius: '20px'\r\n            }}\r\n        >\r\n            {/* Render Messages */}\r\n            {isLoading ?\r\n                <Box sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                    <CircularProgress sx={{ color: theme }} />\r\n                </Box>\r\n                :\r\n                <>\r\n                    {messages?.map((i) => (\r\n                    <MessageComponent key={i._id} message={i} user={user} groupChat={chatMemberDetails?.isGroupChat} />\r\n                    ))}\r\n\r\n                    {userTyping && !chatMemberDetails?.isGroupChat && <TypingLoader />}\r\n                    \r\n                    {\r\n                        chatMemberDetails?.isGroupChat && groupUser && <div style={{ color: 'green' }}>{groupUser} is typing...</div>\r\n                    }\r\n\r\n                    <div ref={bottomRef}/>\r\n                </>\r\n            }\r\n        </Stack>\r\n        <form\r\n            style={{\r\n                position: 'sticky',\r\n                bottom: 0,\r\n                marginTop: '10px'\r\n            }}\r\n            onSubmit={submitHandler}\r\n        >\r\n            <Stack\r\n                direction={'row'}\r\n                height='100%'\r\n                padding='1rem'\r\n                alignItems='center'\r\n                position={'relative'}\r\n                sx={{\r\n                    backgroundColor: white,\r\n                    borderRadius: '15px'\r\n                }}\r\n            >\r\n                <IconButton\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        left: '1.5rem',\r\n                        rotate: '30deg',\r\n                        color: 'black'\r\n                    }}\r\n                    onClick={handleFileOpen}\r\n                >\r\n                    <AttachFileIcon />\r\n                </IconButton>\r\n\r\n                <InputBox \r\n                    ref={inputRef}\r\n                    placeholder='Type Message Here...'\r\n                    value={message}\r\n                    onChange={handleMessageChange}\r\n                />\r\n\r\n                <IconButton\r\n                    type='submit'\r\n                    sx={{\r\n                        bgcolor: gray,\r\n                        rotate: '-30deg',\r\n                        color: theme,\r\n                        marginLeft: '1rem',\r\n                        padding: '0.5rem',\r\n                    }}\r\n                >\r\n                    <SendIcon />\r\n                </IconButton>\r\n            </Stack>\r\n        </form>\r\n\r\n        <FileMenu anchorE1={fileMenuAnchor} chatId={chatId} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AppLayout()(Chat);"],"names":["RenderAttachment","file","url","_jsx","src","preload","width","controls","transformImage","alt","height","style","objectFit","FileOpenIcon","MessageComponent","_ref","message","user","groupChat","sender","content","attachments","createdAt","sameSender","_id","theme","useSelector","store","chat","timeAgo","moment","format","_Fragment","children","_jsxs","motion","div","initial","opacity","x","whileInView","alignSelf","backgroundColor","length","borderRadius","padding","color","overflow","Typography","fontWeight","variant","name","map","attachment","index","fileFormat","Box","href","target","download","memo","ChatHeader","_chatMemberDetails$ch3","_chatMemberDetails$ch4","socket","chatMemberDetails","handleDeleteChat","navigate","useNavigate","params","useParams","id","isOnline","setIsOnline","useState","onlineUserList","setOnlineUserList","onlineUserListener","useCallback","data","useEffect","_chatMemberDetails$ch","_chatMemberDetails$ch2","userId","chatAvatar","isUserOnline","includes","eventHandlers","ONLINE_USERS","emit","useSocketEvents","sx","display","white","position","top","zIndex","margin","Tooltip","title","IconButton","onClick","navigateBack","KeyboardBackspaceIcon","AvatarCard","avatar","Avatar","marginLeft","xs","sm","chatName","isGroupChat","concat","member","join","fontSize","whiteSpace","textOverflow","md","transition","right","e","MoreVertIcon","anchorE1","chatId","isFileMenu","misc","dispatch","useDispatch","imageRef","useRef","videoRef","audioRef","fileRef","sendAttachments","useSendAttachmentsMutation","closeFileMenu","setIsFileMenu","fileChangeHandler","async","key","files","Array","from","toast","error","setUploadingLoader","toastId","loading","myForm","FormData","append","forEach","res","_res$error","_res$error$data","_res$error2","_res$error2$data","success","Menu","anchorEl","open","onClose","MenuList","MenuItem","selectImage","_imageRef$current","current","click","ImageIcon","ListItemText","ref","type","multiple","accept","onChange","selectAudio","_imageRef$current3","AudioFileIcon","selectVideo","_imageRef$current2","VideoFileIcon","selectFile","_imageRef$current4","UploadFileIcon","AppLayout","_chatDetails$data","_chatDetails$data$cha","chats","setMessage","page","setPage","totalPages","setTotalPages","groupUser","setGroupUser","bottomRef","typingTimeout","chatListRef","inputRef","messages","setMessages","userTyping","setUserTyping","iAmTyping","setIAmTyping","fileMenuAnchor","setFileMenuAnchor","useSocket","chatDetails","useGetChatDetailsQuery","skip","members","isLoading","useGetMessagesQuery","useGetOtherChatMemberQuery","errors","isError","CHAT_JOINED","removeNewMessagesAlert","scrollIntoView","behaviour","handleScroll","scrollTop","prev","chatListElement","addEventListener","removeEventListener","newMessagesListener","startTypingListener","stopTypingListener","alertListener","messageForAlert","Date","toISOString","ALERT","NEW_MESSAGE","START_TYPING","STOP_TYPING","GROUP_USER_TYPING","_ref2","username","currentChat","GROUP_USER_STOPPED_TYPING","handleGroupUserStoppedTyping","useErrors","flexDirection","borderBottom","Stack","boxSizing","spacing","bgcolor","overflowX","overflowY","alignItems","justifyContent","CircularProgress","i","TypingLoader","bottom","marginTop","onSubmit","preventDefault","trim","focus","direction","left","rotate","currentTarget","AttachFileIcon","InputBox","placeholder","value","clearTimeout","setTimeout","gray","SendIcon","FileMenu"],"sourceRoot":""}