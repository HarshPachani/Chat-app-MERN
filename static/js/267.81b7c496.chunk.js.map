{"version":3,"file":"static/js/267.81b7c496.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/MoreVert.js","../node_modules/@mui/icons-material/esm/AttachFile.js","../node_modules/@mui/icons-material/esm/AudioFile.js","../node_modules/@mui/icons-material/esm/FileOpen.js","../node_modules/@mui/icons-material/esm/Image.js","../node_modules/@mui/icons-material/esm/KeyboardBackspace.js","../node_modules/@mui/icons-material/esm/Send.js","../node_modules/@mui/icons-material/esm/UploadFile.js","../node_modules/@mui/icons-material/esm/VideoFile.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2\"\n}), 'MoreVert');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6z\"\n}), 'AttachFile');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8zm2 11h-3v3.75c0 1.24-1.01 2.25-2.25 2.25S8.5 17.99 8.5 16.75s1.01-2.25 2.25-2.25c.46 0 .89.14 1.25.38V11h4zm-3-4V3.5L18.5 9z\"\n}), 'AudioFile');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M14 2H6c-1.1 0-2 .9-2 2v16c0 1.1.89 2 1.99 2H15v-8h5V8zm-1 7V3.5L18.5 9zm4 12.66V16h5.66v2h-2.24l2.95 2.95-1.41 1.41L19 19.41v2.24h-2z\"\n}), 'FileOpen');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2M8.5 13.5l2.5 3.01L14.5 12l4.5 6H5z\"\n}), 'Image');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z\"\n}), 'KeyboardBackspace');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8zm4 18H6V4h7v5h5zM8 15.01l1.41 1.41L11 14.84V19h2v-4.16l1.59 1.59L16 15.01 12.01 11z\"\n}), 'UploadFile');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M14 2H6.01c-1.1 0-2 .89-2 2L4 20c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V8zm-1 7V3.5L18.5 9zm1 5 2-1.06v4.12L14 16v1c0 .55-.45 1-1 1H9c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h4c.55 0 1 .45 1 1z\"\n}), 'VideoFile');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.2.10\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection = new ProjectionNodeConstructor(this.latestValues, renderedProps[\"data-framer-portal-id\"]\n                ? undefined\n                : getClosestProjectingNode(this.parent));\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.2.10\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.2.10 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","createSvgIcon","_jsx","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_templateObject","_templateObject2","_templateObject3","_templateObject4","_excluded","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","keyframes","_taggedTemplateLiteral","circularDashKeyframe","CircularProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","concat","capitalize","color","_ref","theme","_extends","display","transition","transitions","create","vars","palette","main","_ref2","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","React","inProps","ref","useThemeProps","className","size","style","thickness","value","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","clsx","width","height","role","children","viewBox","cx","cy","r","fill","strokeWidth","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","arguments","undefined","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","performance","now","max","min","forEach","keepAlive","immediate","microtask","cancelMicrotask","queueMicrotask","isRefObject","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","mount","unmount","current","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","layoutId","useLayoutId","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","jsxs","Provider","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","clamp","number","parse","parseFloat","alpha","scale","sanitize","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","valueTarget","noop","any","frame","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","postRender","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","parseInt","hsla","hue","saturation","lightness","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}