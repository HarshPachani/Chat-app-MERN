{"version":3,"file":"static/js/481.14e7f9dd.chunk.js","mappings":"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","sources":["dialogs/AddMemberDialog.jsx","../node_modules/@mui/material/DialogTitle/DialogTitle.js","../node_modules/@mui/material/DialogTitle/dialogTitleClasses.js","../node_modules/@mui/material/Dialog/dialogClasses.js","../node_modules/@mui/material/Dialog/Dialog.js","../node_modules/@mui/material/Dialog/DialogContext.js"],"sourcesContent":["import { Button, Dialog, DialogTitle, Skeleton, Stack, Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport UserItem from \"../shared/UserItem\";\r\nimport { useAvailableFriendsQuery, useAddGroupMemberMutation } from \"../redux/api/api\";\r\nimport { useAsyncMutation, useErrors } from \"../hooks/Hook\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setIsAddMember } from \"../redux/reducers/misc\";\r\n\r\nconst AddMemberDialog = ({ chatId }) => {\r\n  const [selectedMembers, setSelectedMembers] = useState([]);\r\n\r\n  const { isAddMember } = useSelector(state => state.misc);\r\n  const dispatch = useDispatch();\r\n  \r\n  const [addMembers, isLoadingAddMembers] = useAsyncMutation(useAddGroupMemberMutation);\r\n  const { isLoading, data, isError, error } = useAvailableFriendsQuery(chatId);\r\n\r\n  const selectMemberHandler = (id) => {\r\n    setSelectedMembers((prev) =>\r\n      prev.includes(id) ? prev.filter((i) => i !== id) : [...prev, id]\r\n    );\r\n  };\r\n\r\n  const addMemberSubmitHandler = () => {\r\n    addMembers('Adding Members...', { chatId, members: selectedMembers });\r\n    closeHandler();\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    dispatch(setIsAddMember(false));\r\n  };\r\n  \r\n  useErrors([{ isError, error }]);\r\n\r\n  return (\r\n    <Dialog open={isAddMember} onClose={closeHandler}>\r\n      <Stack p={\"2rem\"} width={\"20rem\"} spacing={\"2rem\"}>\r\n        <DialogTitle textAlign={\"center\"}>Add Member</DialogTitle>\r\n        <Stack spacing={\"1rem\"}>\r\n          {isLoading ? <Skeleton /> : data?.friends?.length > 0 ? (\r\n            data?.friends?.map((i) => (\r\n              <UserItem \r\n                key={i._id} \r\n                user={i} \r\n                handler={selectMemberHandler} \r\n                isAdded = {selectedMembers.includes(i._id)}\r\n            />\r\n            ))\r\n          ) : (\r\n            <Typography>No Friends</Typography>\r\n          )}\r\n        </Stack>\r\n\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems={\"center\"}\r\n          justifyContent={\"space-evenly\"}\r\n        >\r\n          <Button color=\"error\" onClick={closeHandler}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            disabled={isLoadingAddMembers}\r\n            onClick={addMemberSubmitHandler}\r\n          >\r\n            Submit Changes\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddMemberDialog;\r\n","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n      className,\n      id: idProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp != null ? idProp : titleId\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogUtilityClass(slot) {\n  return generateUtilityClass('MuiDialog', slot);\n}\nconst dialogClasses = generateUtilityClasses('MuiDialog', ['root', 'scrollPaper', 'scrollBody', 'container', 'paper', 'paperScrollPaper', 'paperScrollBody', 'paperWidthFalse', 'paperWidthXs', 'paperWidthSm', 'paperWidthMd', 'paperWidthLg', 'paperWidthXl', 'paperFullWidth', 'paperFullScreen']);\nexport default dialogClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aria-describedby\", \"aria-labelledby\", \"BackdropComponent\", \"BackdropProps\", \"children\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useId from '@mui/utils/useId';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport Paper from '../Paper';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport dialogClasses, { getDialogUtilityClass } from './dialogClasses';\nimport DialogContext from './DialogContext';\nimport Backdrop from '../Backdrop';\nimport useTheme from '../styles/useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DialogBackdrop = styled(Backdrop, {\n  name: 'MuiDialog',\n  slot: 'Backdrop',\n  overrides: (props, styles) => styles.backdrop\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    container: ['container', `scroll${capitalize(scroll)}`],\n    paper: ['paper', `paperScroll${capitalize(scroll)}`, `paperWidth${capitalize(String(maxWidth))}`, fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\nconst DialogRoot = styled(Modal, {\n  name: 'MuiDialog',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  '@media print': {\n    // Use !important to override the Modal inline-style.\n    position: 'absolute !important'\n  }\n});\nconst DialogContainer = styled('div', {\n  name: 'MuiDialog',\n  slot: 'Container',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.container, styles[`scroll${capitalize(ownerState.scroll)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  height: '100%',\n  '@media print': {\n    height: 'auto'\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n}, ownerState.scroll === 'body' && {\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  textAlign: 'center',\n  '&::after': {\n    content: '\"\"',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    height: '100%',\n    width: '0'\n  }\n}));\nconst DialogPaper = styled(Paper, {\n  name: 'MuiDialog',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`scrollPaper${capitalize(ownerState.scroll)}`], styles[`paperWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 32,\n  position: 'relative',\n  overflowY: 'auto',\n  // Fix IE11 issue, to remove at some point.\n  '@media print': {\n    overflowY: 'visible',\n    boxShadow: 'none'\n  }\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  flexDirection: 'column',\n  maxHeight: 'calc(100% - 64px)'\n}, ownerState.scroll === 'body' && {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  textAlign: 'left' // 'initial' doesn't work on IE11\n}, !ownerState.maxWidth && {\n  maxWidth: 'calc(100% - 64px)'\n}, ownerState.maxWidth === 'xs' && {\n  maxWidth: theme.breakpoints.unit === 'px' ? Math.max(theme.breakpoints.values.xs, 444) : `max(${theme.breakpoints.values.xs}${theme.breakpoints.unit}, 444px)`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.maxWidth && ownerState.maxWidth !== 'xs' && {\n  maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: 'calc(100% - 64px)'\n}, ownerState.fullScreen && {\n  margin: 0,\n  width: '100%',\n  maxWidth: '100%',\n  height: '100%',\n  maxHeight: 'none',\n  borderRadius: 0,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    margin: 0,\n    maxWidth: '100%'\n  }\n}));\n\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialog'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      'aria-describedby': ariaDescribedby,\n      'aria-labelledby': ariaLabelledbyProp,\n      BackdropComponent,\n      BackdropProps,\n      children,\n      className,\n      disableEscapeKeyDown = false,\n      fullScreen = false,\n      fullWidth = false,\n      maxWidth = 'sm',\n      onBackdropClick,\n      onClick,\n      onClose,\n      open,\n      PaperComponent = Paper,\n      PaperProps = {},\n      scroll = 'paper',\n      TransitionComponent = Fade,\n      transitionDuration = defaultTransitionDuration,\n      TransitionProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  });\n  const classes = useUtilityClasses(ownerState);\n  const backdropClick = React.useRef();\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n  const handleBackdropClick = event => {\n    if (onClick) {\n      onClick(event);\n    }\n\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n    backdropClick.current = null;\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  const ariaLabelledby = useId(ariaLabelledbyProp);\n  const dialogContextValue = React.useMemo(() => {\n    return {\n      titleId: ariaLabelledby\n    };\n  }, [ariaLabelledby]);\n  return /*#__PURE__*/_jsx(DialogRoot, _extends({\n    className: clsx(classes.root, className),\n    closeAfterTransition: true,\n    components: {\n      Backdrop: DialogBackdrop\n    },\n    componentsProps: {\n      backdrop: _extends({\n        transitionDuration,\n        as: BackdropComponent\n      }, BackdropProps)\n    },\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(DialogContainer, {\n        className: clsx(classes.container),\n        onMouseDown: handleMouseDown,\n        ownerState: ownerState,\n        children: /*#__PURE__*/_jsx(DialogPaper, _extends({\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby\n        }, PaperProps, {\n          className: clsx(classes.paper, PaperProps.className),\n          ownerState: ownerState,\n          children: /*#__PURE__*/_jsx(DialogContext.Provider, {\n            value: dialogContextValue,\n            children: children\n          })\n        }))\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\n   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Paper`](/material-ui/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Dialog;","import * as React from 'react';\nconst DialogContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  DialogContext.displayName = 'DialogContext';\n}\nexport default DialogContext;"],"names":["_ref","_data$friends","_data$friends2","chatId","selectedMembers","setSelectedMembers","useState","isAddMember","useSelector","state","misc","dispatch","useDispatch","addMembers","isLoadingAddMembers","useAsyncMutation","useAddGroupMemberMutation","isLoading","data","isError","error","useAvailableFriendsQuery","selectMemberHandler","id","prev","includes","filter","i","closeHandler","setIsAddMember","useErrors","_jsx","Dialog","open","onClose","children","_jsxs","Stack","p","width","spacing","DialogTitle","textAlign","Skeleton","friends","length","map","UserItem","user","handler","isAdded","_id","Typography","direction","alignItems","justifyContent","Button","color","onClick","variant","disabled","addMemberSubmitHandler","members","_excluded","DialogTitleRoot","styled","name","slot","overridesResolver","props","styles","root","padding","flex","React","inProps","ref","useThemeProps","className","idProp","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","getDialogTitleUtilityClass","useUtilityClasses","titleId","DialogContext","_extends","component","clsx","generateUtilityClass","generateUtilityClasses","getDialogUtilityClass","DialogBackdrop","Backdrop","overrides","backdrop","zIndex","DialogRoot","Modal","position","DialogContainer","container","concat","capitalize","scroll","height","outline","display","overflowY","overflowX","content","verticalAlign","DialogPaper","Paper","paper","String","maxWidth","fullWidth","paperFullWidth","fullScreen","paperFullScreen","_ref2","theme","margin","boxShadow","flexDirection","maxHeight","breakpoints","unit","Math","max","values","xs","dialogClasses","paperScrollBody","down","borderRadius","useTheme","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","ariaDescribedby","ariaLabelledbyProp","BackdropComponent","BackdropProps","disableEscapeKeyDown","onBackdropClick","PaperComponent","PaperProps","TransitionComponent","Fade","transitionDuration","TransitionProps","slots","backdropClick","ariaLabelledby","useId","dialogContextValue","closeAfterTransition","components","componentsProps","as","event","current","appear","in","timeout","role","onMouseDown","target","currentTarget","elevation","Provider","value"],"sourceRoot":""}