{"version":3,"file":"static/js/861.7db7f69f.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/DialogContent/dialogContentClasses.js","../node_modules/@mui/material/DialogContent/DialogContent.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js","dialogs/ConfirmDeleteDialog.jsx","../node_modules/@mui/material/DialogTitle/DialogTitle.js","../node_modules/@mui/material/DialogTitle/dialogTitleClasses.js","../node_modules/@mui/material/Dialog/dialogClasses.js","../node_modules/@mui/material/Dialog/Dialog.js","../node_modules/@mui/material/Dialog/DialogContext.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"dividers\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport dialogTitleClasses from '../DialogTitle/dialogTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    dividers\n  } = ownerState;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px'\n}, ownerState.dividers ? {\n  padding: '16px 24px',\n  borderTop: `1px solid ${(theme.vars || theme).palette.divider}`,\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n} : {\n  [`.${dialogTitleClasses.root} + &`]: {\n    paddingTop: 0\n  }\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n  const {\n      className,\n      dividers = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    dividers\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n  const {\n      className,\n      disableSpacing = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material'\r\nimport React from 'react'\r\n\r\nconst ConfirmDeleteDialog = ({ open, handleClose, deleteHandler }) => {\r\n  return (\r\n    <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Confirm Delete</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>Are you sure you want to delete this group?</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={handleClose}>No</Button>\r\n            <Button color='error' onClick={deleteHandler}>Yes</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default ConfirmDeleteDialog","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n      className,\n      id: idProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp != null ? idProp : titleId\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogUtilityClass(slot) {\n  return generateUtilityClass('MuiDialog', slot);\n}\nconst dialogClasses = generateUtilityClasses('MuiDialog', ['root', 'scrollPaper', 'scrollBody', 'container', 'paper', 'paperScrollPaper', 'paperScrollBody', 'paperWidthFalse', 'paperWidthXs', 'paperWidthSm', 'paperWidthMd', 'paperWidthLg', 'paperWidthXl', 'paperFullWidth', 'paperFullScreen']);\nexport default dialogClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aria-describedby\", \"aria-labelledby\", \"BackdropComponent\", \"BackdropProps\", \"children\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useId from '@mui/utils/useId';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport Paper from '../Paper';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport dialogClasses, { getDialogUtilityClass } from './dialogClasses';\nimport DialogContext from './DialogContext';\nimport Backdrop from '../Backdrop';\nimport useTheme from '../styles/useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DialogBackdrop = styled(Backdrop, {\n  name: 'MuiDialog',\n  slot: 'Backdrop',\n  overrides: (props, styles) => styles.backdrop\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    container: ['container', `scroll${capitalize(scroll)}`],\n    paper: ['paper', `paperScroll${capitalize(scroll)}`, `paperWidth${capitalize(String(maxWidth))}`, fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\nconst DialogRoot = styled(Modal, {\n  name: 'MuiDialog',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  '@media print': {\n    // Use !important to override the Modal inline-style.\n    position: 'absolute !important'\n  }\n});\nconst DialogContainer = styled('div', {\n  name: 'MuiDialog',\n  slot: 'Container',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.container, styles[`scroll${capitalize(ownerState.scroll)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  height: '100%',\n  '@media print': {\n    height: 'auto'\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n}, ownerState.scroll === 'body' && {\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  textAlign: 'center',\n  '&::after': {\n    content: '\"\"',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    height: '100%',\n    width: '0'\n  }\n}));\nconst DialogPaper = styled(Paper, {\n  name: 'MuiDialog',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`scrollPaper${capitalize(ownerState.scroll)}`], styles[`paperWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 32,\n  position: 'relative',\n  overflowY: 'auto',\n  // Fix IE11 issue, to remove at some point.\n  '@media print': {\n    overflowY: 'visible',\n    boxShadow: 'none'\n  }\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  flexDirection: 'column',\n  maxHeight: 'calc(100% - 64px)'\n}, ownerState.scroll === 'body' && {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  textAlign: 'left' // 'initial' doesn't work on IE11\n}, !ownerState.maxWidth && {\n  maxWidth: 'calc(100% - 64px)'\n}, ownerState.maxWidth === 'xs' && {\n  maxWidth: theme.breakpoints.unit === 'px' ? Math.max(theme.breakpoints.values.xs, 444) : `max(${theme.breakpoints.values.xs}${theme.breakpoints.unit}, 444px)`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.maxWidth && ownerState.maxWidth !== 'xs' && {\n  maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: 'calc(100% - 64px)'\n}, ownerState.fullScreen && {\n  margin: 0,\n  width: '100%',\n  maxWidth: '100%',\n  height: '100%',\n  maxHeight: 'none',\n  borderRadius: 0,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    margin: 0,\n    maxWidth: '100%'\n  }\n}));\n\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialog'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      'aria-describedby': ariaDescribedby,\n      'aria-labelledby': ariaLabelledbyProp,\n      BackdropComponent,\n      BackdropProps,\n      children,\n      className,\n      disableEscapeKeyDown = false,\n      fullScreen = false,\n      fullWidth = false,\n      maxWidth = 'sm',\n      onBackdropClick,\n      onClick,\n      onClose,\n      open,\n      PaperComponent = Paper,\n      PaperProps = {},\n      scroll = 'paper',\n      TransitionComponent = Fade,\n      transitionDuration = defaultTransitionDuration,\n      TransitionProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  });\n  const classes = useUtilityClasses(ownerState);\n  const backdropClick = React.useRef();\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n  const handleBackdropClick = event => {\n    if (onClick) {\n      onClick(event);\n    }\n\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n    backdropClick.current = null;\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  const ariaLabelledby = useId(ariaLabelledbyProp);\n  const dialogContextValue = React.useMemo(() => {\n    return {\n      titleId: ariaLabelledby\n    };\n  }, [ariaLabelledby]);\n  return /*#__PURE__*/_jsx(DialogRoot, _extends({\n    className: clsx(classes.root, className),\n    closeAfterTransition: true,\n    components: {\n      Backdrop: DialogBackdrop\n    },\n    componentsProps: {\n      backdrop: _extends({\n        transitionDuration,\n        as: BackdropComponent\n      }, BackdropProps)\n    },\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(DialogContainer, {\n        className: clsx(classes.container),\n        onMouseDown: handleMouseDown,\n        ownerState: ownerState,\n        children: /*#__PURE__*/_jsx(DialogPaper, _extends({\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby\n        }, PaperProps, {\n          className: clsx(classes.paper, PaperProps.className),\n          ownerState: ownerState,\n          children: /*#__PURE__*/_jsx(DialogContext.Provider, {\n            value: dialogContextValue,\n            children: children\n          })\n        }))\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\n   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Paper`](/material-ui/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Dialog;","import * as React from 'react';\nconst DialogContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  DialogContext.displayName = 'DialogContext';\n}\nexport default DialogContext;"],"names":["getDialogContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentRoot","styled","name","overridesResolver","props","styles","ownerState","root","dividers","_ref","theme","_extends","flex","WebkitOverflowScrolling","overflowY","padding","borderTop","concat","vars","palette","divider","borderBottom","dialogTitleClasses","paddingTop","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","getDialogContentTextUtilityClass","DialogContentTextRoot","Typography","shouldForwardProp","prop","rootShouldForwardProp","composedClasses","component","variant","color","getDialogActionsUtilityClass","DialogActionsRoot","disableSpacing","spacing","display","alignItems","justifyContent","marginLeft","open","handleClose","deleteHandler","_jsxs","Dialog","onClose","children","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","DialogTitleRoot","id","idProp","getDialogTitleUtilityClass","titleId","DialogContext","getDialogUtilityClass","DialogBackdrop","Backdrop","overrides","backdrop","zIndex","DialogRoot","Modal","position","DialogContainer","container","capitalize","scroll","height","outline","overflowX","textAlign","content","verticalAlign","width","DialogPaper","Paper","paper","String","maxWidth","fullWidth","paperFullWidth","fullScreen","paperFullScreen","_ref2","margin","boxShadow","flexDirection","maxHeight","breakpoints","unit","Math","max","values","xs","dialogClasses","paperScrollBody","down","borderRadius","useTheme","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","ariaDescribedby","ariaLabelledbyProp","BackdropComponent","BackdropProps","disableEscapeKeyDown","onBackdropClick","PaperComponent","PaperProps","TransitionComponent","Fade","transitionDuration","TransitionProps","backdropClick","ariaLabelledby","useId","dialogContextValue","closeAfterTransition","components","componentsProps","as","event","current","appear","in","timeout","role","onMouseDown","target","currentTarget","elevation","Provider","value"],"sourceRoot":""}