{"version":3,"file":"static/js/283.ba51ce6f.chunk.js","mappings":"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","sources":["components/IconButton.jsx","components/SideBar.jsx","constants/events.js","dialogs/MenuAnchor.jsx","hooks/Hook.jsx","components/ManageGroupLayout.jsx","pages/Group.jsx","shared/AvatarCard.jsx","shared/Title.jsx","shared/UserItem.jsx"],"sourcesContent":["import React, { memo } from \"react\";\r\nimport { Tooltip, IconButton, Badge, Avatar } from '@mui/material';\r\n\r\nconst IconBtn = ({ title, icon, onClick, value, color='inherit', sx, src }) => {\r\n  return (\r\n      <Tooltip title={title} sx={sx}>\r\n        <IconButton size=\"large\" onClick={onClick} style={{\r\n          color: color\r\n        }}>\r\n          { src ? \r\n          value ? <Badge \r\n          badgeContent={value} \r\n          sx={{\r\n            '& .MuiBadge-badge': {\r\n              backgroundColor: color === 'inherit' ? 'white' : color ,\r\n              color: color === 'inherit' ? 'black' : 'white',\r\n            },\r\n          }}\r\n        >{icon}</Badge> : <Avatar src={src} />\r\n          :\r\n            value ? <Badge \r\n                      badgeContent={value} \r\n                      sx={{\r\n                        '& .MuiBadge-badge': {\r\n                          backgroundColor: color === 'inherit' ? 'white' : color ,\r\n                          color: color === 'inherit' ? 'black' : 'white',\r\n                        },\r\n                      }}\r\n                    >{icon}</Badge> : icon\r\n          }\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n};\r\n\r\nexport default memo(IconBtn)","import { AppBar, Backdrop, Box, Typography } from '@mui/material'\r\nimport React, { Suspense, lazy, memo, useRef, useState } from 'react'\r\nimport { purple } from '../constants/color.js';\r\nimport {\r\n  Search as SearchIcon,\r\n  Add as AddIcon,\r\n  Group as GroupIcon,\r\n  Notifications as NotificationsIcon,\r\n  AccountCircle as ProfileIcon,\r\n} from '@mui/icons-material';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport ForumIcon from '@mui/icons-material/Forum';\r\nimport IconBtn from './IconButton';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIsNewGroup, setIsNotification, setIsProfile, setIsSearch } from '../redux/reducers/misc.js';\r\nimport { resetNotificationCount } from '../redux/reducers/chat.js';\r\nimport MenuAnchor from '../dialogs/MenuAnchor.jsx';\r\n\r\nconst SearchDialog = lazy(() => import('../dialogs/Search.jsx'));\r\nconst NotificationDialog = lazy(() => import('../dialogs/Notification.jsx'));\r\nconst NewGroupDialog = lazy(() => import('../dialogs/NewGroup.jsx'));\r\nconst ProfileDialog = lazy(() => import('../dialogs/ProfileDialog.jsx'));\r\n\r\nconst SideBar = ({ chatId }) => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const profileAnchor = useRef(null);\r\n\r\n  const { user } = useSelector((store) => store.auth);\r\n  const { isSearch, isNotification, isNewGroup, isProfile } = useSelector((store) => store.misc);\r\n  const { notificationCount, theme, newMessagesCount } = useSelector((store) => store.chat);\r\n  \r\n  const navigateToGroup = () => {\r\n    navigate('/groups')\r\n  }\r\n  const navigateToChat = () => {\r\n    navigate('/')\r\n  }\r\n\r\n  const openSearchDialog = () => dispatch(setIsSearch(true));\r\n  const openNotification = () => {\r\n    dispatch(setIsNotification(true));\r\n    dispatch(resetNotificationCount())\r\n  }\r\n  const openNewGroup = () => dispatch(setIsNewGroup(true));\r\n  const openProfile = () => { \r\n    setIsOpen(false);\r\n    dispatch(setIsProfile(true));\r\n  }\r\n\r\n  const handleMenuOpen = (e) => {\r\n    setIsOpen(true);\r\n    profileAnchor.current = e.currentTarget;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n          sx={{\r\n            bgcolor: purple,\r\n            height: { xs: '40px', sm: '100vh' },\r\n            width: { xs: '100vw', sm: '80px' },\r\n            margin: { xs:'none' , sm: '3px' },\r\n            padding: { xs: 'none' , sm: '10px' },\r\n            borderRadius: '20px',\r\n            display: { xs: chatId ? 'none' : 'flex', sm: 'flex' },\r\n            flexDirection: { xs: 'row', sm: 'column' }, \r\n            alignItems: {xs: 'center', sm: 'space-between'},\r\n            justifyContent: {xs: 'center', sm: 'space-around'},\r\n            position: { sm: 'sticky', xs: 'fixed' },\r\n            left: { sm: 0, xs: 0},\r\n            right: { sm: 'auto', xs: 'auto' },\r\n            bottom: { sm: 'auto', xs: 0 },\r\n            top: { sm: 0, xs: 'auto' }\r\n          }}\r\n        >\r\n          <MenuAnchor \r\n            isOpen={isOpen} \r\n            setIsOpen={setIsOpen} \r\n            dispatch={dispatch} \r\n            menuAnchor={profileAnchor} \r\n            openProfile={openProfile}\r\n          />\r\n          <Typography\r\n            variant=\"h6\"\r\n            sx={{\r\n              display: { xs: \"none\", sm: \"block\" },\r\n            }}\r\n          >\r\n            <ForumIcon />\r\n          </Typography>\r\n            \r\n          {/* <Toolbar> */}\r\n            <Box>\r\n              <IconBtn\r\n                title=\"Chats\"\r\n                icon={<ChatIcon />}\r\n                onClick={navigateToChat}\r\n                color={(location.pathname.includes('/chat') || location.pathname === '/') && (!isSearch && !isNotification && !isNewGroup && !isProfile) ? theme : 'inherit'}\r\n                value={newMessagesCount}\r\n              />\r\n              <IconBtn\r\n                title=\"Search\"\r\n                icon={<SearchIcon />}\r\n                color={isSearch ? theme : 'inherit'}\r\n                onClick={openSearchDialog}\r\n              />\r\n              <IconBtn\r\n                title=\"New Group\"\r\n                icon={<AddIcon />}\r\n                color={isNewGroup ? theme : 'inherit'}\r\n                onClick={openNewGroup}\r\n              />\r\n              <IconBtn\r\n                title=\"Manage Groups\"\r\n                icon={<GroupIcon />}\r\n                color={location.pathname.includes('/groups') ? theme : 'inherit'}\r\n                onClick={navigateToGroup}\r\n              />\r\n              <IconBtn\r\n                title=\"Notifications\"\r\n                icon={<NotificationsIcon />}\r\n                color={isNotification ? theme : 'inherit'}\r\n                value={notificationCount}\r\n                onClick={openNotification}\r\n              />\r\n            </Box>\r\n          {/* </Toolbar> */}\r\n          {\r\n            user?.avatar?.url ? \r\n            <IconBtn \r\n              title={user.username}\r\n              src={user.avatar.url}\r\n              color={isProfile ? theme : 'inherit'}\r\n              sx={{\r\n                  display: { xs: 'none', sm: 'flex' }\r\n              }}\r\n              onClick={handleMenuOpen}\r\n            />\r\n            : \r\n            <IconBtn \r\n              title={user.username}\r\n              icon={<ProfileIcon />}\r\n              color={isProfile ? theme : 'inherit'}\r\n              sx={{\r\n                  display: { xs: 'none', sm: 'flex' }\r\n              }}\r\n              onClick={handleMenuOpen}\r\n            />\r\n          }\r\n      </AppBar>\r\n      {\r\n        isSearch && (\r\n          <Suspense fallback={ <Backdrop open /> }>\r\n            <SearchDialog />\r\n          </Suspense>\r\n        )\r\n      }\r\n      {\r\n        isNotification && (\r\n          <Suspense fallback={ <Backdrop open /> }>\r\n            <NotificationDialog />\r\n          </Suspense>\r\n        )\r\n      }\r\n      {\r\n        isNewGroup && (\r\n          <Suspense fallback={ <Backdrop open /> }>\r\n            <NewGroupDialog />\r\n          </Suspense>\r\n        )\r\n      }\r\n      {\r\n        isProfile && (\r\n          <Suspense fallback={ <Backdrop open /> }>\r\n            <ProfileDialog />\r\n          </Suspense>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(SideBar)","const ALERT = \"ALERT\";\r\nconst REFETCH_CHATS = \"REFETCH_CHATS\";\r\n\r\nconst NEW_ATTACHMENT = \"NEW_ATTACHMENT\";\r\nconst NEW_MESSAGE_ALERT = \"NEW_MESSAGE_ALERT\";\r\n\r\nconst NEW_REQUEST = \"NEW_REQUEST\";\r\n\r\nconst NEW_MESSAGE = \"NEW_MESSAGE\";\r\n\r\nconst START_TYPING = \"START_TYPING\";\r\nconst STOP_TYPING = \"STOP_TYPING\";\r\n\r\nconst CHAT_JOINED = \"CHAT_JOINED\";\r\nconst CHAT_LEAVED = \"CHAT_LEAVED\";\r\n\r\nconst ONLINE_USERS = 'ONLINE_USERS';\r\nconst ONLINE_USER_SET = 'ONLINE_USER_SET';\r\nconst ONLINE_USER_DELETE = 'ONLINE_USER_DELETE';\r\n\r\nconst GROUP_USER_TYPING = 'GROUP_USER_TYPING';\r\nconst GROUP_USER_STOPPED_TYPING = 'GROUP_USER_STOPPED_TYPING';\r\n\r\nconst REFETCH_PROFILE = 'REFETCH_PROFILE';\r\nconst REFETCH_GROUP_CHAT_LIST = 'REFETCH_GROUP_CHAT_LIST'\r\nconst REFETCH_GROUP_CHAT_MEMBERS = 'REFETCH_GROUP_CHAT_MEMBERS';\r\n\r\nexport {\r\n  ALERT,\r\n  REFETCH_CHATS,\r\n  NEW_ATTACHMENT,\r\n  NEW_MESSAGE_ALERT,\r\n  NEW_REQUEST,\r\n  NEW_MESSAGE,\r\n  START_TYPING,\r\n  STOP_TYPING,\r\n  CHAT_JOINED,\r\n  CHAT_LEAVED,\r\n  ONLINE_USERS,\r\n  ONLINE_USER_SET,\r\n  ONLINE_USER_DELETE,\r\n  GROUP_USER_TYPING,\r\n  GROUP_USER_STOPPED_TYPING,\r\n  REFETCH_PROFILE,\r\n  REFETCH_GROUP_CHAT_LIST,\r\n  REFETCH_GROUP_CHAT_MEMBERS,\r\n};\r\n","import { Box, ListItemText, Menu, MenuItem, MenuList, Stack } from '@mui/material';\r\nimport React, { memo, useState } from 'react'\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport { userNotExists } from '../redux/reducers/auth';\r\nimport toast from 'react-hot-toast';\r\nimport axios from 'axios';\r\n\r\nconst MenuAnchor = ({ isOpen, setIsOpen, dispatch, menuAnchor, openProfile }) => {\r\n\r\n    const handleClose = () => {\r\n        menuAnchor.current = null;\r\n        setIsOpen(false);\r\n    } \r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n          const { data } = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/v1/user/logout`, { withCredentials: true });\r\n          dispatch(userNotExists());\r\n          toast.success(data.message);\r\n        } catch (error) {\r\n          toast.error(error?.response?.data?.message || 'Something went wrong');\r\n        }\r\n        setIsOpen(false);\r\n    };\r\n\r\n  return (\r\n    <Menu\r\n        open = {isOpen}\r\n        onClose={handleClose}\r\n        anchorEl={menuAnchor.current}\r\n        anchorOrigin={{\r\n            vertical: 'right',\r\n            horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'center',\r\n        }}\r\n    >\r\n      <div style={{ width: '10rem' }}>\r\n        <MenuList>\r\n          <MenuItem\r\n            onClick={openProfile}\r\n          >\r\n              <AccountBoxIcon />\r\n              <ListItemText style={{ marginLeft: '0.5rem' }}>MyProfile</ListItemText>\r\n          \r\n          </MenuItem>\r\n          <MenuItem \r\n            onClick={handleLogout}\r\n          >\r\n            <LogoutIcon />\r\n            <ListItemText style={{ marginLeft: '0.5rem' }}>Logout</ListItemText>\r\n          </MenuItem>\r\n        </MenuList>\r\n      </div>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default memo(MenuAnchor)","import { useEffect, useState } from \"react\";\r\nimport toast from 'react-hot-toast';\r\n\r\nconst useSocketEvents = (socket, handlers) => {\r\n  useEffect(() => {\r\n      Object.entries(handlers).forEach(([event, handler]) => {\r\n          socket.on(event, handler);\r\n      });\r\n      return () => {\r\n          Object.entries(handlers).forEach(([event, handler]) => {\r\n            socket.off(event, handler);\r\n          });\r\n    \r\n        } \r\n  }, [socket, handlers]);\r\n};\r\n\r\nconst useErrors = (errors=[]) => {\r\n  useEffect(() => {\r\n    errors.forEach(({ isError, error, fallBack }) => {\r\n      if(isError) {\r\n        if(fallBack) fallBack();\r\n        else toast.error(error?.data?.message || 'Something went wrong');\r\n      }\r\n    })\r\n  }, [errors]);\r\n};\r\n\r\nconst useAsyncMutation = (mutationHook) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState(null);\r\n\r\n  const [mutate] = mutationHook();\r\n  const executeMutation = async(toastMessage, ...args) => { \r\n    setIsLoading(true);\r\n    const toastId = toast.loading(toastMessage || 'Updating data...');\r\n    \r\n    try {\r\n      const res = await mutate(...args);\r\n      \r\n      if(res.data) {\r\n        toast.success(res.data.message || 'Updated data Successfuly', {\r\n          id: toastId,\r\n        });\r\n        setData(res.data);\r\n      } else {\r\n        toast.error(res?.error?.data?.message || 'Something went wrong', {\r\n          id: toastId,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error('Something went wrong!', { id: toastId });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return [ executeMutation, isLoading, data ];\r\n};\r\n\r\nexport { useSocketEvents, useErrors, useAsyncMutation };","import React, { useCallback, useEffect, useState } from 'react'\r\nimport SideBar from './SideBar'\r\nimport { Box } from '@mui/material'\r\nimport { gray } from '../constants/color'\r\nimport { useMyGroupsQuery } from '../redux/api/api'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport { useSocketEvents } from '../hooks/Hook'\r\nimport { REFETCH_CHATS } from '../constants/events'\r\nimport { useSocket } from '../context/socket'\r\nimport { GroupsList } from '../pages/Group'\r\nimport Title from '../shared/Title'\r\n\r\nconst manageGroupLayout = () => (WrappedComponent) => {\r\n    return (props) => {\r\n      const socket = useSocket();\r\n      const [groupName, setGroupName] = useState('');\r\n      const [groupNameUpdatedValue, setGroupNameUpdatedValue] = useState('');\r\n      const [isEdit, setIsEdit] = useState(false);\r\n      \r\n      const { data , refetch } = useMyGroupsQuery('');\r\n      \r\n      const refetchListener = useCallback((data) => {\r\n        refetch();\r\n      }, [refetch]);\r\n\r\n      const eventHandlers = {\r\n        [REFETCH_CHATS]: refetchListener,\r\n      }\r\n      useSocketEvents(socket, eventHandlers);\r\n\r\n      const chatId = useSearchParams()[0].get('group');\r\n\r\n      useEffect(() => {\r\n        if(chatId) {\r\n          setGroupName(`Group Name ${chatId}`);\r\n          setGroupNameUpdatedValue(`Group Name ${chatId}`);\r\n        }\r\n\r\n        return () => {\r\n          setGroupName(``);\r\n          setGroupNameUpdatedValue(``);\r\n          setIsEdit(false);\r\n        };\r\n      }, [chatId]);\r\n\r\n      return (\r\n        <Box           \r\n          sx={{\r\n            display: 'flex',\r\n            // position: 'fixed',\r\n            position: {xs: 'relative', sm: 'fixed' },\r\n            flexDirection: { xs: 'column-reverse', sm: 'row'},\r\n            backgroundColor: gray,\r\n            // overflow: 'none',\r\n            height: '100%',\r\n            width: '100%'\r\n          }}\r\n        >\r\n          <Title />\r\n          <SideBar chatId={chatId} />\r\n          <GroupsList\r\n            myGroups={data?.groups}\r\n            chatId={chatId}\r\n          />\r\n          <WrappedComponent \r\n            {...props}\r\n            myGroups={data?.groups}\r\n          />\r\n        </Box>\r\n      )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default manageGroupLayout","import React, { Suspense, lazy, memo, useCallback, useEffect, useState } from 'react'\r\nimport ManageGroupLayout from '../components/ManageGroupLayout';\r\nimport { Backdrop, Box, Button, CircularProgress, Grid, IconButton, Menu as MenuIcon, Stack, TextField, Tooltip, Typography } from '@mui/material';\r\nimport { gray, orange, white } from '../constants/color';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { Add as AddIcon, Delete as DeleteIcon, Done as DoneIcon, Edit as EditIcon, KeyboardBackspace as KeyboardBackspaceIcon, AccountCircle as ProfileIcon } from '@mui/icons-material';\r\nimport { useDeleteChatMutation, useGetChatDetailsQuery, useRemoveGroupMemberMutation, useRenameGroupMutation } from '../redux/api/api';\r\nimport UserItem from '../shared/UserItem';\r\nimport { useAsyncMutation, useErrors, useSocketEvents } from '../hooks/Hook';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIsAddMember, setIsProfile } from '../redux/reducers/misc';\r\nimport { useSocket } from '../context/socket';\r\nimport { REFETCH_CHATS, REFETCH_GROUP_CHAT_MEMBERS } from '../constants/events';\r\nimport IconBtn from '../components/IconButton'\r\nimport { InputBox, Link } from '../styles/StyledComponents';\r\nimport AvatarCard from '../shared/AvatarCard';\r\n\r\nconst ConfirmDeleteDialog = lazy(() => import('../dialogs/ConfirmDeleteDialog'));\r\nconst AddMemberDialog = lazy(() => import('../dialogs/AddMemberDialog'));\r\n\r\nconst Group = ({ myGroups }) => {\r\n  \r\n  const chatId = useSearchParams()[0].get(\"group\");\r\n  \r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const socket = useSocket();\r\n\r\n  const { isAddMember } = useSelector((store) => store.misc);\r\n\r\n  const { data, refetch } = useGetChatDetailsQuery(\r\n    { chatId, populate: true },\r\n    { skip: !chatId }\r\n  );\r\n\r\n\r\n  const refetchListener = useCallback((data) => {\r\n    console.log(\"Refetching...\");\r\n    refetch();\r\n  }, [refetch]);\r\n\r\n  const socketHandlers = {\r\n    [REFETCH_GROUP_CHAT_MEMBERS]: refetchListener,\r\n  }\r\n\r\n  useSocketEvents(socket, socketHandlers);\r\n\r\n  const [groupName, setGroupName] = useState('');\r\n  const [groupNameUpdatedValue, setGroupNameUpdatedValue] = useState('');\r\n  const [members, setMembers] = useState([]);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [confirmDeleteDialog, setConfirmDeleteDialog] = useState(false);\r\n\r\n  const [deleteGroup, isLoadingDeleteGroup] = useAsyncMutation(useDeleteChatMutation);\r\n  const [removeMember, isLoadingRemoveMember] = useAsyncMutation(useRemoveGroupMemberMutation);\r\n  const [updateGroup, isLoadingGroupName] = useAsyncMutation(useRenameGroupMutation);\r\n\r\n  const errors = [\r\n    {\r\n      isError: myGroups?.isError,\r\n      error: myGroups?.error,\r\n    },\r\n    {\r\n      isError: data?.isError,\r\n      error: data?.error,\r\n    },\r\n  ];\r\n\r\n  useErrors(errors);\r\n\r\n  useEffect(() => {\r\n    const groupData = data;\r\n\r\n    if (groupData) {\r\n      setGroupName(groupData.chat.name);\r\n      setGroupNameUpdatedValue(groupData.chat.name);\r\n      setMembers(groupData.chat.members);\r\n    }\r\n\r\n    return () => {\r\n      setGroupName(\"\");\r\n      setGroupNameUpdatedValue(\"\");\r\n      setMembers([]);\r\n      setIsEdit(\"\");\r\n    };\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    setGroupName(groupNameUpdatedValue);\r\n  }, [groupNameUpdatedValue]);\r\n\r\n  useEffect(() => {\r\n    if (chatId && data) {\r\n      setGroupName(`${data?.chat?.name}`);\r\n      setGroupNameUpdatedValue(`${data?.chat?.name}`);\r\n    }\r\n\r\n    return () => {\r\n      setGroupName(``);\r\n      setGroupNameUpdatedValue(``);\r\n      setIsEdit(false);\r\n    };\r\n  }, [chatId]);\r\n  \r\n  const navigateBack = () => {\r\n    navigate(\"/groups\");\r\n  };\r\n\r\n  const openConfirmDeleteHandler = () => {\r\n    setConfirmDeleteDialog(true);\r\n  };\r\n\r\n  const openAddMember = () => {\r\n    dispatch(setIsAddMember(true));\r\n  };\r\n\r\n  const deleteGroupHandler = () => {\r\n    deleteGroup('Deleting Group...', chatId);\r\n    navigate('/groups');\r\n    setConfirmDeleteDialog(false);\r\n  }\r\n\r\n  const updateGroupNameHandler = () => {\r\n    setIsEdit(false);\r\n    updateGroup('Updating Group Name...', {\r\n      chatId,\r\n      name: groupNameUpdatedValue,\r\n    })\r\n  }\r\n\r\n  const removeMemberHandler = (userId) => {\r\n    removeMember('Removing member...', { chatId, userId});\r\n  };\r\n\r\n  \r\n\r\n  const IconBtns = (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: {\r\n            xs: 'block',\r\n            sm: 'none',\r\n            position: 'fixed',\r\n            right: '1rem',\r\n            top: '1rem',\r\n          },\r\n        }}\r\n      >\r\n      </Box>\r\n      <Tooltip title='back'>\r\n        <IconButton\r\n          sx={{\r\n            display: chatId ? 'block' : 'none',\r\n            position: 'absolute',\r\n            top: '2rem',\r\n            left: '2rem',\r\n            bgcolor: gray,\r\n            color: 'black',\r\n          }}\r\n          onClick={navigateBack}\r\n          >\r\n          <KeyboardBackspaceIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n  \r\n  const ButtonGroup = (\r\n    <Stack\r\n      direction={{\r\n        xs: \"column-reverse\",\r\n        sm: \"row\",\r\n      }}\r\n      spacing={\"1rem\"}\r\n      p={{\r\n        sm: \"1rem\",\r\n        xs: \"0\",\r\n        md: \"1rem 4rem\",\r\n      }}\r\n    >\r\n      <Button\r\n        size='large'\r\n        color='error'\r\n        startIcon={<DeleteIcon />}\r\n        onClick={openConfirmDeleteHandler}\r\n      >\r\n        Delete Group\r\n      </Button>\r\n  \r\n      <Button\r\n        size='large'\r\n        color='warning'\r\n        variant='contained'\r\n        startIcon={<AddIcon />}\r\n        onClick={openAddMember}\r\n      >\r\n        Add Member\r\n      </Button>\r\n    </Stack>\r\n  );\r\n  \r\n  const GroupName = (\r\n    <>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        padding=\"1rem\"\r\n        spacing=\"1rem\"\r\n      >\r\n        {isEdit ? (\r\n          <>\r\n            <TextField\r\n              value={groupNameUpdatedValue}\r\n              onChange={(e) => setGroupNameUpdatedValue(e.target.value)}\r\n            />\r\n            <IconButton\r\n              onClick={updateGroupNameHandler}\r\n              disabled={isLoadingGroupName}\r\n            >\r\n              <DoneIcon />\r\n            </IconButton>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Typography variant=\"h5\">Group Name: {groupName}</Typography>\r\n            <IconButton\r\n              onClick={() => setIsEdit(true)}\r\n              disabled={isLoadingGroupName}\r\n            >\r\n              <EditIcon />\r\n            </IconButton>\r\n          </>\r\n        )}\r\n      </Stack>\r\n    </>\r\n  );\r\n  \r\n  return (\r\n    <Grid\r\n        item\r\n        xs={12}\r\n        sm={8}\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          position: 'relative',\r\n          padding: '1rem 3rem',\r\n          paddingTop: 0,\r\n        }}\r\n      >\r\n        {IconBtns}\r\n        {groupName && (\r\n          <>\r\n            {GroupName}\r\n            <Typography margin='2rem' alignSelf='flex-start' variant='body'>\r\n              Members\r\n            </Typography>\r\n            <Stack\r\n              maxWidth={'45rem'}\r\n              width={'100%'}\r\n              boxSizing={'border-box'}\r\n              padding={{\r\n                sm: '1rem',\r\n                xs: '0',\r\n                md: '1rem 4rem',\r\n              }}\r\n              spacing={'2rem'}\r\n              height={'50vh'}\r\n              overflow={'auto'}\r\n            >\r\n              {/* Members */}\r\n              { isLoadingRemoveMember ? <CircularProgress /> :\r\n               members?.map((i) => (\r\n                <UserItem\r\n                  key={i._id}\r\n                  user={i}\r\n                  isAdded\r\n                  styling={{\r\n                    boxShadow: '0 0 0.5rem rgba(0, 0, 0, 0.2)',\r\n                    padding: { xs: 0, sm: '1rem 2rem' },\r\n                    borderRadius: '1rem',\r\n                  }}\r\n                  handler={removeMemberHandler}\r\n                />\r\n              ))}\r\n            </Stack>\r\n            {ButtonGroup}\r\n          </>\r\n        )}\r\n        {isAddMember && (\r\n          <Suspense fallback={<Backdrop open />}>\r\n            <AddMemberDialog chatId={chatId} />\r\n          </Suspense>\r\n        )\r\n        }\r\n        {confirmDeleteDialog && (\r\n          <Suspense fallback={<Backdrop open />}>\r\n            <ConfirmDeleteDialog \r\n              open={confirmDeleteDialog}\r\n              handleClose={() => setConfirmDeleteDialog(false)}\r\n              deleteHandler={deleteGroupHandler}\r\n            />\r\n          </Suspense>\r\n        )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst GroupsList = memo(({ w = \"100%\", myGroups = [], chatId }) => {\r\n  const [search, setSearch] = useState('');\r\n  const [groupChatList, setGroupChatList] = useState(myGroups);\r\n\r\n  const { user } = useSelector(store => store.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setGroupChatList(myGroups);\r\n  }, [myGroups]);\r\n\r\n  useEffect(() => {\r\n    if (search.trim() === '') {\r\n      setGroupChatList(myGroups);\r\n    } else {\r\n      const filteredGroups = myGroups.filter(group =>\r\n        group.name.toLowerCase().includes(search.toLowerCase().trim())\r\n      );\r\n      setGroupChatList(filteredGroups);\r\n    }\r\n  }, [search, myGroups]);\r\n\r\n  const openProfile = () => dispatch(setIsProfile(true));\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      sx={{\r\n        display: { xs: chatId ? 'none' : 'block', sm: 'block' },\r\n        marginBottom: '5px',\r\n        height: '100vh'\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: { xs: 'column', md: 'row' },\r\n          justifyContent: 'space-around',\r\n          alignItems: 'center',\r\n          backgroundColor: 'white',\r\n          borderRadius: '15px',\r\n          padding: '5px',\r\n          height: 'auto',\r\n          margin: '5px'\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            width: { xs: '100%', sm: 'auto' }\r\n          }}\r\n        >\r\n          <Typography variant='h5' sx={{ marginLeft: '5px' }}>Groups</Typography>\r\n          <IconBtn\r\n            title={user?.username}\r\n            icon={<ProfileIcon />}\r\n            sx={{ display: { xs: 'flex', sm: 'none' } }}\r\n            onClick={openProfile}\r\n          />\r\n        </Box>\r\n        <InputBox\r\n          placeholder=\"Search Groups...\"\r\n          value={search}\r\n          onChange={handleSearchChange}\r\n        />\r\n      </Box>\r\n      <Stack\r\n        width={w}\r\n        direction=\"column\"\r\n        sx={{\r\n          height: '100%',\r\n          overflow: 'auto',\r\n          backgroundColor: 'white',\r\n          borderRadius: '20px',\r\n          marginRight: '5px',\r\n          border: `2px solid white`\r\n        }}\r\n      >\r\n        {groupChatList.length > 0 ? (\r\n          groupChatList.map((group) => (\r\n            <GroupListItem key={group._id} group={group} chatId={chatId} />\r\n          ))\r\n        ) : (\r\n          <Typography textAlign=\"center\" padding=\"1rem\">\r\n            No groups\r\n          </Typography>\r\n        )}\r\n      </Stack>\r\n    </Grid>\r\n  );\r\n})\r\n\r\nconst GroupListItem = memo(({ group, chatId }) => {\r\n  const { name, avatar, _id } = group;\r\n  const currentChat = useSearchParams()[0].get(\"group\");\r\n\r\n  return (\r\n    <Link\r\n      to={`?group=${_id}`}\r\n      onClick={(e) => {\r\n        if (chatId === _id) e.preventDefault();\r\n      }}\r\n      style={{\r\n        backgroundColor: currentChat === _id ? gray : '' \r\n      }}\r\n    >\r\n      <Stack direction={\"row\"} spacing={\"1rem\"} alignItems={\"center\"}>\r\n        <AvatarCard avatar={avatar} />\r\n        <Typography>{name}</Typography>\r\n      </Stack>\r\n    </Link>\r\n  );\r\n});\r\n\r\nexport default memo(ManageGroupLayout()(Group));\r\nexport { GroupListItem, GroupsList };","import React, { memo } from 'react'\r\nimport { Avatar, AvatarGroup, Stack, Box } from '@mui/material'\r\n\r\nconst AvatarCard = ({ avatar=[], max=4 }) => {\r\n  return (\r\n    <Stack \r\n        direction={'row'} \r\n        spacing={0.5}\r\n    >\r\n        <AvatarGroup\r\n            max={max}\r\n            sx={{\r\n                position: 'relative'\r\n            }}\r\n        >\r\n            <Box width={'5rem'} height={'3rem'} />\r\n            {avatar && avatar?.map((i, index) => (\r\n                <Avatar\r\n                  key={Math.random()*100} \r\n                  src={i?.avatar ? i?.avatar?.url : i} \r\n                  alt={`Avatar ${index}`}\r\n                  sx={{\r\n                    width: '3rem',\r\n                    height: '3rem',\r\n                    position: 'absolute',\r\n                    left: {\r\n                        xs: `${0.5 + index}rem`,\r\n                        sm: `${index+1}rem`\r\n                    }\r\n                  }} \r\n                />\r\n            ))}\r\n        </AvatarGroup>\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default memo(AvatarCard)","import React, { memo } from 'react'\r\nimport { Helmet } from 'react-helmet-async'\r\n\r\nconst Title = ({ title = 'We-Chat', description='This is the Chat App' }) => {\r\n  return (\r\n    <Helmet>\r\n        <title>{ title }</title>\r\n        <meta name='description' content={description} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default memo(Title)","import { Add as AddIcon, Remove as RemoveIcon } from '@mui/icons-material';\r\nimport { Avatar, IconButton, ListItem, Stack, Typography } from '@mui/material';\r\nimport React, { memo } from 'react'\r\nimport { transformImage } from '../lib/features';\r\n\r\nconst UserItem = ({ user, handler, handlerIsLoading, isAdded=false, styling={} }) => {\r\n    const { name, _id, avatar } = user;\r\n  return (\r\n    <ListItem>\r\n      <Stack \r\n          direction={'row'} \r\n          alignItems={'center'}\r\n          width='100%'\r\n          sx={{...styling}}\r\n      >\r\n          <Avatar src={transformImage(avatar)} />\r\n\r\n          <Typography\r\n            variant='body1'\r\n            sx={{\r\n              flexGlow: 1,\r\n              display: '-webkit-box',\r\n              WebkitLineClamp: 1,\r\n              WebkitBoxOrient: 'vertical',\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              width: '100%'\r\n            }}\r\n          >{name}</Typography>\r\n          <IconButton\r\n            size='small'\r\n            sx={{\r\n              bgcolor: isAdded? 'error.main' : 'primary.main',\r\n              color: 'white',\r\n              '&:hover': {\r\n                  bgcolor: isAdded? 'error.dark' : 'primary.dark',\r\n              },\r\n            }}\r\n            onClick={() => handler(_id)}\r\n            disabled={handlerIsLoading}>\r\n              {\r\n                isAdded ? <RemoveIcon /> : <AddIcon />\r\n              }\r\n          </IconButton>\r\n      </Stack>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nexport default memo(UserItem);"],"names":["IconBtn","_ref","title","icon","onClick","value","color","sx","src","_jsx","Tooltip","children","IconButton","size","style","Badge","badgeContent","backgroundColor","Avatar","memo","SearchDialog","lazy","NotificationDialog","NewGroupDialog","ProfileDialog","SideBar","_user$avatar","chatId","navigate","useNavigate","location","useLocation","dispatch","useDispatch","isOpen","setIsOpen","useState","profileAnchor","useRef","user","useSelector","store","auth","isSearch","isNotification","isNewGroup","isProfile","misc","notificationCount","theme","newMessagesCount","chat","handleMenuOpen","e","current","currentTarget","_jsxs","_Fragment","AppBar","bgcolor","purple","height","xs","sm","width","margin","padding","borderRadius","display","flexDirection","alignItems","justifyContent","position","left","right","bottom","top","MenuAnchor","menuAnchor","openProfile","setIsProfile","Typography","variant","ForumIcon","Box","ChatIcon","navigateToChat","pathname","includes","SearchIcon","openSearchDialog","setIsSearch","AddIcon","openNewGroup","setIsNewGroup","GroupIcon","navigateToGroup","NotificationsIcon","openNotification","setIsNotification","resetNotificationCount","avatar","url","username","ProfileIcon","Suspense","fallback","Backdrop","open","ALERT","REFETCH_CHATS","NEW_MESSAGE_ALERT","NEW_REQUEST","NEW_MESSAGE","START_TYPING","STOP_TYPING","CHAT_JOINED","ONLINE_USERS","ONLINE_USER_SET","ONLINE_USER_DELETE","GROUP_USER_TYPING","GROUP_USER_STOPPED_TYPING","REFETCH_PROFILE","REFETCH_GROUP_CHAT_MEMBERS","Menu","onClose","handleClose","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","AccountBoxIcon","ListItemText","marginLeft","async","data","axios","get","concat","process","withCredentials","userNotExists","toast","success","message","error","_error$response","_error$response$data","response","LogoutIcon","useSocketEvents","socket","handlers","useEffect","Object","entries","forEach","event","handler","on","_ref2","off","useErrors","errors","arguments","length","undefined","_ref3","isError","fallBack","_error$data","useAsyncMutation","mutationHook","isLoading","setIsLoading","setData","mutate","toastMessage","toastId","loading","_len","args","Array","_key","res","_res$error","_res$error$data","id","console","log","manageGroupLayout","WrappedComponent","props","useSocket","groupName","setGroupName","groupNameUpdatedValue","setGroupNameUpdatedValue","isEdit","setIsEdit","refetch","useMyGroupsQuery","refetchListener","useCallback","eventHandlers","useSearchParams","gray","Title","GroupsList","myGroups","groups","ConfirmDeleteDialog","AddMemberDialog","w","search","setSearch","groupChatList","setGroupChatList","trim","filteredGroups","filter","group","name","toLowerCase","Grid","item","marginBottom","md","InputBox","placeholder","onChange","target","Stack","direction","overflow","marginRight","border","map","GroupListItem","_id","textAlign","currentChat","Link","to","preventDefault","spacing","AvatarCard","ManageGroupLayout","isAddMember","useGetChatDetailsQuery","populate","skip","socketHandlers","members","setMembers","confirmDeleteDialog","setConfirmDeleteDialog","deleteGroup","isLoadingDeleteGroup","useDeleteChatMutation","removeMember","isLoadingRemoveMember","useRemoveGroupMemberMutation","updateGroup","isLoadingGroupName","useRenameGroupMutation","groupData","_data$chat","_data$chat2","removeMemberHandler","userId","IconBtns","navigateBack","KeyboardBackspaceIcon","ButtonGroup","p","Button","startIcon","DeleteIcon","openConfirmDeleteHandler","openAddMember","setIsAddMember","GroupName","TextField","updateGroupNameHandler","disabled","DoneIcon","EditIcon","paddingTop","alignSelf","maxWidth","boxSizing","CircularProgress","i","UserItem","isAdded","styling","boxShadow","deleteHandler","deleteGroupHandler","max","AvatarGroup","index","_i$avatar","alt","Math","random","description","Helmet","content","handlerIsLoading","ListItem","transformImage","flexGlow","WebkitLineClamp","WebkitBoxOrient","textOverflow","RemoveIcon"],"sourceRoot":""}